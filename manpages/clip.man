.na
.nh
.TH CLIP 1 3.4.18 BL3DEMC
.SH NAME
clip \- command line image processing for mrc files.
.SH SYNOPSIS
clip [process] [options] [input files...] [output file]
.SH DESCRIPTION
The processes that clip can do are listed below. One and only one
process must be selected on the command line.  Only the first three or
four letters of the process name have to be entered.
.TP
.I add
Add several images together.
.TP
.I average (avg) 
Average several images together.
.PD 0
.TP
.I brighten
Brighten image by scaling intensities.
.TP
.I color
Add false color to image.
.TP
.I contrast
Adjust contrast by scaling intensities.
.TP
.I correlation   
Do a auto/cross correlation.
.TP
.I diffusion
Do 2d anisotropic diffusion.
.TP
.I divide
Divide one image volume by another.
.TP
.I gradient
Calculate a gradient as in 3dmod image processing.
.TP
.I graham
Apply Graham filter as in 3dmod image processing.
.TP
.I info
Print header information to stdout.
.TP   
.I fft
Calculate a FFT or inverse FFT transform.
.TP
.I filter
Calculate a bandpass filter.
.TP
.I flip[xyz]
Flip an image by x y or z.
.TP
.I joinrgb
Join images from 3 byte files into one RGB file.
.TP
.I laplacian
Apply Laplacian filter as in 3dmod image processing.
.TP
.I median
Apply median filter.
.TP
.I multiply
Multiply one image volume by another.
.TP
.I prewitt
Apply Prewitt filter as in 3dmod image processing.
.TP
.I quadrant
Correct disparities between quadrants in images from 4-port readout camera.
.TP
.I resize
Box out image to a new size.
.TP
.I rotx
Rotate a volume by -90 degrees about X axis.
.TP
.I shadow
Adjust darkness of image by scaling intensities.
.TP
.I sharpen
Sharpen image as in 3dmod image processing.
.TP
.I smooth
Smooth image as in 3dmod image processing.
.TP
.I sobel
Apply Sobel filter as in 3dmod image processing.
.TP
.I splitrgb
Split an RGB file into 3 byte files.
.TP
.I stats
Print min, max, mean, standard deviation, and location of min and max.
.TP
.I standev
Compute the standard deviation of a set of images.
.TP
.I subtract
Subtract one image volume from another.
.TP
.I truncate
Limit pixel values at low or high end, or both.
.TP
.I unwrap
Undo wraparound of values in integer data.
.TP
.I variance
Compute the variance of a set of images.
.PD
.SH Options
These options are available to most processes.
.TP
.B \-v
View output data file using 3dmod.
.TP
.B \-2d
Use 2d instead of 3d (default) processes if a
2d process exists. Each input file is considered
a stack of 2D images to be processed.  For most processes, this will change
only the way that the 
.B -iz
option is interpreted.
.TP
.B \-3d
Use 3d process. Each input file is considered a 
volume to be processed.
.TP
.B -a
Append data to output file.  Append and overwrite are not available for
processing modes that do not take standard input and output size and centering
options.
.TP
.B -ov <section>
Overwrite output starting at section number
.I section.
Range is from 0 (first section) to z size - 1 (last section) unless the
.B -1
option is entered to number sections from 1.
.TP
.B \-p <value>
Image coordinates with no image data are padded with the given 
.I value.
The default is the mean value of the input image.
.TP
.B -c[xyz] <value>
Adjust the center of input image. Default is center of first input 
file.
The
.B -cx 
option will center the x coordinate on the given 
.I value,
the 
.B -cy
option will center the y coordinate on the given
.I value and
the
.B -cz 
option will center the z coordinate on the given
.I value.

.TP
.B -ix <value>
.PD 0
.TP
.B -iy <value>
.TP
.B -iz <value>
.PD
Sets the size of input image.  
The default is the size of the first input file.
The 
.B -ix
option sets the x input size,
the
.B -iy
option sets the y input size.  The
.B -iz
option sets the z input size, or specifies a list of Z values if the
.B -2d
option is included.  In the latter case, the 
.I value
is interpreted as a comma-separated list of ranges. Commas indicate individual
section numbers and dashes (or minus symbol) indicate a range of sections.
.TP
.B -x <value,value>
.PD 0
.TP
.B -y <value,value>
.PD
These options are an alternative way of specifying the size and center of the 
input image.  The two values are the starting and ending coordinates,
numbered from 0 (i.e., the first pixel in an image is (0, 0)).  The
.B -x
option sets the X coordinates, and neither 
.B -cx
nor
.B -ix
may be entered with it.  The
.B -y
option sets the Y coordinates, and neither 
.B -cy
nor
.B -iy
may be entered with it.  These coordinates are not constrained to lie within
the volume; regions outside the volume will be filled with the padding value.
.TP
.B -ox <value>
.PD 0
.TP
.B -oy <value>
.TP
.B -oz <value>
.PD
Size of output file.  Default is same as input size, 
options 
.B -a 
and 
.B -ov 
override these setting.
The 
.B -ox 
option sets the x output size,
the 
.B -oy
options sets the y output size and the
.B -oz
option sets the z output size.
.TP
.B -1
Z values are numbered from 1 instead of 0, the default.  This option affects
the interpretation of lists of Z values entered with 
.B -iz
when the 
.B -2d
option is given, and the interpretation of the Z value entered with the
.B -oz
and
.B -cz
options.  When running "clip stat", slices will be referred to as views
instead and numbered from 1 with this option.

.SH Selected options
The following options are valid for selected processes:
.TP
.B -s
Switch, use depends on process.
.TP
.B -m <mode>
Output modes: "byte", "ubyte", "sbyte", "short", "float", "complex", "ushort",
"rgb", or 0-4, 6, or 16.  0 = byte, 1 = short, 2 = float, 3 = complex short, 
4 = complex float, 6 = unsigned short, 16 = rgb.  "byte" will produce byte
output that is signed or unsigned depending on the default for this version of
IMOD and the value of the environment variable WRITE_MODE0_SIGNED.  Use
"ubyte" or "sbyte" to force unsigned or signed byte output regardless of other
settings.  Unsigned output is needed to work with versions of IMOD
before IMOD 4.2.23; signed output may be needed for compatibility with
external software that has followed recent documentation of the MRC format.
Regardless of the representation in the file, bytes are read into IMOD programs as
unsigned with a range of 0 to 255.
.TP
.B -h <level>
Has three uses: 1) Level for high pass filter. Range is (0.0 - 0.71 / pixel).
The default value is 0. 2) High level for image truncation; the default is no
truncation.  3) Width of area analyzed in quadrant correction.
.TP
.B -k <value>
K threshold value for anisotropic diffusion; the default is 2.0.
.TP
.B -l <level>
Has multiple uses: 1) Level for low pass filter. Range is (0.0 - 0.71 / pixel).
The default value is 1.0.  2) Sigma of Gaussian kernel for smoothing; the
default is to use the standard kernel shown below.
3) With diffusion, this specifies the lambda value or 
step size; the default is 0.2. 4) With statistics, sets the number of slices
over which to determine outliers in the min and max values. 5) When using
"add" or taking an average, standard deviation, or variance, sets a factor for
scaling the output values. 5) With image truncation, sets the low level for
truncation (default is no truncation). 6) With quadrant correction, sets a
base to be added to values for scaling.
.TP
.B -cc <value>
Specifies type of edge stopping function for diffusion: 1 for exponential
function, 2 for rational function, 3 for Tukey biweight.  The default is 2.
.TP
.B -n <value>
Input number. Use depends on process: threshold for averaging, scaling factor
for brightness/contrast/shadow, padding for correlations,
iterations for smoothing or anisotropic diffusion, size for
median filter, criterion for determining outliers in statistics, value to add
when undoing wraparound, number of images to analyze together for quadrant
correction.
.TP
.B -r <value>
Red value;   Range is (0.0 - 1.0) Default is 1.0.
.TP
.B -g <value>
Green value; Range is (0.0 - 1.0) Default is 1.0.
.TP
.B -b <value>
Blue value;  Range is (0.0 - 1.0) Default is 1.0.
.TP
.B -P <file>
Name of piece list file, in order to have coordinates in statistics converted
to position in a montage displayed with adjusted overlap.  The overlap in the
display is assumed to be zero, unless overlap is specified with the
.B -O
option.
.TP
.B -O <value,value>
Overlap values in X and Y to be used when printing coordinates corresponding
to positions in a displayed montage.  Negative values correspond to spaces
between the displayed pieces.

.SH PROCESSES

A brief description of each process is given below.
.TP
.B add
Add image volumes together.  All of the input files (there must be at least
two) are added together slice by slice.  All input images must be the same
size.  Standard input and output options are available.  The output values can
be scaled with
.B -l
and the output mode can be changed.
.TP
.B average 
(avg) Average images together.  If more than one input file is given, it adds
all of the input files together slice by slice and then divides the sum by the
number of input files.  All input images must be the same size.  Standard
input and output options are available.  With one input file, it averages the
2D slices to produce one output slice.  In this case, use the
.B -n
option to set a threshold such that pixels below threshold are not included in
the average.  Standard input options are available but output cannot be
resized.  In either case, the output values can be scaled with
.B -l
and the output mode can be changed.  As of IMOD 4.2.15, the distinction
between 2D and 3D averaging is controlled by the number of input files and not
by the 
.B -2d
versus
.B -3d
options.
.TP
.B brightness 
.PD 0
.TP
.B contrast
.TP 
.B shadow
.PD
Increase or decrease image brightness, contrast, or darkness.
These options scale the image intensity by the
value entered with the
.B -n
option, with intensity fixed at one point.  With
.B brightness,
intensity is fixed at the minimum so scaling up increasing brightness.
With
.B contrast,
intensity is fixed at the mean; with 
.B shadow,
intensity is fixed at the maximum so dark parts are scaled more.
Scaling values less then 1 will decrease the chosen
property, values greater then 1 increase it.  With the
.B -2d
option, the min, max, or mean are taken from the individual sections.
.TP
.B color
Colorize a black and white image.
Color 3d version: reads in a whole mrc file as byte data and then scales
the image to a color ramp that starts at black and goes to
the 
.B -r, -g,
and
.B -b
values given on the command line.
The default color values are 1.0.  Standard options for input and output size
are not implemented.
.br
Color 2d version: reads in data slice by slice without scaling it to bytes,
the scales the image to a color ramp using the 
.B -r, -g,
and
.B -b
values.  The size of these values may need to be adjusted to get output data
within the desired range (0-255).  Standard options are available.
.TP
.B correlation 
Calculate auto or cross correlation functions.
3d correlation takes 1 or 2 volumes and does an
auto or cross correlation respectively.  If the volumes
are fourier transforms, the output file will be a fourier 
transform.  
2d correlation takes 1 or 2 slices for input and does an
auto or cross correlation respectively.
Select the slices with the 
.B -iz 
option.  Input files in this case may
not be fourier transforms.  All other input types are automatically
padded, FFT transformed, correlated and inverse FFT transformed.
One or two input files can be given
and one output file needs to be given.
Input is automatically padded with the mean value
unless the
.B -p
option is given to change the pad value. The 
.B -n
option selects the type of padding: "-n 0" selects no padding; "-n 1"
selects padding with mean value. (default)
Float is the only output mode supported.
Input sizes must have dimensions that fit the requirements for an FFT:
a multiple of two, and no prime factors greater than 19.
.TP
.B diffusion
Apply 2D anisotropic diffusion to individual slices, using the simple Perona
and Malik diffusion technique.  The gradients in this method are simply
pixel-to-pixel differences.  The ratio between these pixel-to-pixel
differences and the threshold K determines how much diffusion is allowed
between pixels.  The number of iterations is specified with the
.B -n
option (default 5).  The edge stopping function is selected with the
.B -cc
option and can be 1 for the exponential function, 2 for
the rational function, or 3 for the Tukey biweight function (default 2).  The
K value for controlling the edge stopping function is entered with the
.B -k
option.  For byte data, start with values on the order of 1; the rational edge
function may require lower values and the Tukey biweight may require larger
values.  The effect of the value scales proportional to the range of the data.
The step size, lambda, is specified with the
.B -l
option; the default is 0.2, which should be small enough to give stable 
results.
These computations correspond to those done in the image processing window in
3dmod(1), but better results will generally by obtained with nad_eed_3d(1).
.TP
.B fft
Calculate a Fast Fourier Transform.
fft does either a forward or inverse FFT, depending
on the input data type.  The output for a forward 
transformation is complex float.  The input sizes
must be a multiple of two, and must have no prime factors
greater than 19.  Both 2D and 3D output match the format of the FFT output
by fftrans(1), in which no data is duplicated and the center is
shifted to x = 0, y = ny/2.  Older FFT files produced by clip, in
which the data were replicated to the left of the Y axis, will still
be accepted as input.  Input size and centering options can be used for the
forward transform, and output size and mode can be set for the inverse
transform.
.TP
.B filter
High and/or low pass filtering in frequency space (2D only).
Filters an FFT or an image using the -l and -h options.  An
FFT and inverse FFT is automatically done if needed.  The
units for -l and -h are cycles/pixel so they range from 0 to 0.5.
Everything higher
than -l and lower then -h is filtered.  The attenuation will be 0.5 at
the given frequency; the filter factor is the product of
1/(1+(r/l)**3) if -l is entered and 1/(1+(h/r)**3) if -h is entered,
where r is the radius in cycles/pixel.  The input sizes
must be a multiple of two, and must have no prime factors
greater than 19.
.TP
.B flip
The flip command is just the root of several types of
image transformations.  The flipx and flipy 
commands will each create a new file where each slice is the mirror
image of the input slice around the x or y axis.  The flipz command will
invert the order of slices (mirror around the x/y plane).
The flipxy, flipyz, or flipzx commands will exchange x and y coordinates, y and
z, or z and x coordinates, respectively.  
and also change the size of the
output file to match (e.g., with flipyz, the sizes in y and z are exchanged).
No input size or centering, or output size or mode options will be applied.  
All of these options invert the handedness of the
structures in the image file.  Use the rotx command instead of flipyz to
reorient a volume without changing handedness.
.TP
.B gradient
.PD 0
.TP
.B graham
.TP
.B prewitt
.TP
.B sobel
.PD
These options apply simple 2D filters to the input image, using the same
method as for the respective entry in the 3dmod
image processing dialog.  The
.B prewitt
and
.B sobel
filters seem to be the most useful.
.TP
.B info
Print information about an image.
All header information in the mrc file is printed to 
standard output.  If the file is not an mrc file the 
information is still printed with a warning that the
file is not an mrc file.
.TP
.B joinrgb
Combine 3 input files containing red, green, and blue information into one 
RGB file.  The 3 input files must all be byte mode and their names must
be entered in the order red, green, and blue, followed by the output file name.
The 
.B -r, -g,
and
.B -b
options can be used to scale the components (default scaling is 1).  The 
.B -a
option can be used to append to an existing color file of the same size in X
and Y.  No other options except 
.B -v
will work with this process.
.TP
.B median
Apply a median filter by replacing each pixel with the median of the values
in a block of neighboring pixels.  The size of the block is given by the
.B -n
option; its default is 3.  The default is to do a 3D filter (thus taking the
median in cubes of data), but the 
.B -2d
option can be used to apply a 2D filter that considers only the pixels in one 
section.  Note that an even size will offset the data by half a pixel.
.TP
.B multiply
.PD 0
.TP
.B divide
.PD
Multiply or divide the first input file by the second input file.  Use
"multiply" to apply a mask to a volume, such as one produced by Imodmop(1).
The files must be the same size, but standard input and output options can be
used.  The first input file may be any mode.  The second input file must have
a single "data channel" (i.e., byte, integer, or float) unless the first input
file is complex, in which case the second file can be either a single-channel
or a complex file.  There is no provision for scaling the output, but the mode
can be changed to preserve resulting values outside the range of the input
mode.
.TP
.B quadrant
Analyze and correct for differences between quadrants in images from
4-port-readout cameras.  The boundary between quadrants must be in the exact
image center in X and Y.  By default, the program analyzes and corrects each
section separately by finding the mean in areas adjacent to the boundary that
are 20 pixels wide and extend parallel to the boundary from the center out to
within 5% of the image edge.  Scaling factors are computed that do the best
job of equalizing these means across the boundaries.  There are four options
that affect this behavior:
.br
1) The 
.B -iz
option can specify a list of sections to correct; all other sections are
simply copied to the output file.  This option allows you to run the
correction on subsets of the data with different parameter settings if necessary.
.br
2) The
.B -n
option sets the number of images to analyze together.  The sections are
considered in successive groups of this size.  An overall mean is
obtained from the average of the boundary areas, and a single scaling is
computed and applied to all the sections in the group.  Enter any number larger
than the number of sections in the file to have all images analyzed together.
.br
3) The
.B -l
option sets a base amount to add to the data.  By default, the program will add
a base if necessary to avoid analyzing negative mean values from boundary
areas, but this may not work well.  If you have data from FEI software that
have had 32768 subtracted, you must enter "-l 32768" to have the correction
work correctly.
.br
4) The
.B -h
option sets the width of the boundary areas.
.br
The output file will have the same dimensions as the input file; options for
selecting subareas are ignored.  
Extra header data are copied over to the output file.  The 
.B -m
option can be used to change the mode of the output.
.TP
.B resize 
Cut out or pad an image to a new size without doing any other operations.
Resize 3d cuts out an image of size ix, iy, iz, centered
around cx, cy, and cz.  The output size of the file is 
ox, oy, and oz.  The default input size is the size of the 
input file, the default center is the center of the input 
file and the default output size is the same as the input 
size.  
The default padding is the average value of the 
input file; the padding can be changed with the -p option.
Resize 2d cuts out a list of slices specified by the
.B
-iz
option.
.TP
.B rotx
Rotate an image volume by -90 degrees about the X axis.  This rotation is
preferable to flipyz because it preserves the handedness of structures.
The origin and tilt angles in the header will be modified to retain the
coordinate system of the original volume, as is done by Rotatevol(1).  
.TP
.B sharpen
.PD 0
.TP
.B smooth
.TP
.B laplacian
.PD
These options will filter images by convolving with a simple 3x3 or larger
kernel, using
the same method as for the respective entry in the 3dmod image processing
dialog.  The smoothing filter is the most useful; by default, its kernel is
.nf
    1 2 1
    2 4 2
    1 2 1
.fi
However, a Gaussian kernel can be used for smoothing instead if a standard
deviation (sigma) is entered with the 
.B -l
option.  The kernel will be 3x3 for sigma up to 1.0, 5x5
for sigma up to 2.0, and 7x7 for higher sigma values.
.TP
.B splitrgb
Output the 3 color channels of an RGB file into three separate files, so that
other operations can be performed on them (such as transformations).  With
this process, the output file name will be used as a root for three filenames
ending in .r, .g, and .b.  A subset in Z may be extracted
from the file, where the
.B -iz
entry is interpreted as usual depending on whether 
.B -2d
is specified.  No other options except
.B -v
will work with this process.  
.TP
.B standev
.PD 0
.TP
.B variance
.PD
Compute standard deviation or variance of a set of volumes or a set of images
in a stack.  These operations work the same as the "average" option, so if the
same options are given, the results should be usable together for statistical
tests, such as with Subimstat(1).
If more than one input file is given, it computes the statistics for each
pixel from all of the input files and outputs a volume.  All input images must
be the same size and mode. Standard input and output options are available in
this case.  With one input file, it computes the
statistics for each pixel in X/Y across the slices and produces one output slice.
Just as with averaging, use the
.B -n
option to set a threshold such that pixels below threshold are not included in
the statistic.  Standard input options are available but output cannot be
resized in this case.  For both cases, if a scaling factor is entered with the
.B -l
option, then standard deviations will be scaled by this factor but variances
will be scaled by the square of the factor.  to prevent saturation with byte
input data, you will generally need either to scale the output appropriately
or to change the output mode to floating point.

.TP
.B stats
Calculate stats on a file. A table is printed with the
minimum, maximum, mean and standard deviation.  The locations of the max and 
min
are also printed.  The locations are calculated by doing a
quadratic fit around the extreme value.  If the
.B -s
option is given, the location of the max is adjusted by half the image
size, which may be appropriate for a cross-correlation.  Otherwise, if
statistics are done on a subarea, the location is adjusted to give the
coordinates in the full image. If either the 
.B -l
or the
.B -n
option is given, min and max values will be analyzed for outliers
by comparing the min or max value for a slice with the respective
values for nearby slices or for all slices.  The comparison is by the ratio of the
distance of a value from the median, to the median of such distances.  The
criterion for this ratio is set with the
.B -n
option and has a default of 2.24; use higher values to have fewer slices
marked as outliers.  The number of nearby slices used for comparison is set
with the
.B -l
option; otherwise the comparison is with the values for all slices.  Each
outlier is marked with a star, and at the end the slices with outlier values
are listed.
.TP
.B subtract
Subtract the second input file from the first one.  Both files must be the
same size and mode, but standard input and output options are available.
There is no provision for scaling, but the mode of the output can be 
changed, .e.g., to preserve negative values.
.TP
.B truncate
Truncate pixel values at a lower or upper limit, or both.  Enter the lower
limit with 
.B
-l
and the upper limit with
.B
-h.  If the 
.B -s
option is given, values beyond the limit will be replaced by the image mean.
Standard input and output options can be used.
.TP
.B unwrap
Add the value specified by the 
.B -n
option (32768 by default for signed integer data) and adjust any values that
are now out of range for the input data mode by adding or subtracting 65536.
This process can be used to recover data that wrapped around when they
were saved as integers.  Two examples of wraparound are: 1) Unsigned data that
went higher that 32767 but were saved as signed integers, in which the values
above 32767 now appear as large negative numbers.  2) Data with negative
values that had 32768 subtracted before saving, in which the negative values
became large positive ones (this has been seen with FEI acquisition software).
In case 1, the default value to add (32768) is appropriate but the data then
need to be saved as unsigned (mode 6) or as floating point.  In case 2, the
default value is appropriate as long as the original data did not range higher
than 32767; if they did, then you need to determine a different value to add,
such as a small number just sufficient to bring the originally negative numbers
above 0.  This process will also work with unsigned input data but a
.B -n
entry is required.  Standard input and output options can be used.

.SH HISTORY
Originally most processes loaded all data into memory unless the -2d option
was given, and the -2d option did not provide for any output padding.
Work in Jan 2005 fixed this so that only 3D correlation and FFTs and
3D color load the whole volume; everything else does slice-by-slice
processing, with proper handling of output padding and appending regardless of
whether -2d or -3d is selected.  Rotation, translation, and zoom were not
well-implemented and were abandoned.

.SH AUTHORS
.nf
Jim Kremer 
David Mastronarde
The anisotropic diffusion is based on a program by Alejandro Cantarero 
.fi

.SH SEE ALSO
3dmod(1), newstack(1), rotatevol(1), matchvol(1), fftrans(1), subimstat(1),
imodmop(1)

.SH BUGS
There are not checks for the validity of all input values, and some
nonsensical mode conversions are allowed.  Disk-based 3D FFTs (invoked with
-s) do not work.  The extended header is not copied over to the output file,
except by the quadrant process.

Email bug reports to mast@colorado.edu.
