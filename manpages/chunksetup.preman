.na
.nh
.TH chunksetup 1 3.2.19 BL3DEMC
.SH NAME
chunksetup \- Set up command files to process a volume in chunks
.SH SYNOPSIS
chunksetup [options] <command file> <input file>  <output file>
.SH DESCRIPTION
chunksetup will produce a set of command files to process a 3D image file in
chunks and reassemble the chunks into a single image file.  This procedure can
be used when the processing operation is memory intensive, when it is more 
efficiently done in smaller chunks, or when one wishes to run the operation on
multiple processors. 

To use this procedure, first make a master command file (the first required 
argument) that performs the needed operation, in the format required by
Vmstocsh, as ordinarily run with subm.  Instead of using the actual filenames,
the input file for the
operation in this command file should be entered as INPUTFILE, and the final 
output of the operation
as OUTPUTFILE.  (Note that OUTPUTFILE should not be used for the name of the
final output file given on the chunksetup command line.)  The command file may
perform multiple operations and may even
contain INPUTFILE more than once.  If the procedure needs to produce temporary
intermediate files, they 
should be named ending in ".$$" (e.g., chunktemp.$$).  At the end of the 
command file, include lines to remove the specific intermediate files, e.g.
.br
$if (-e chunktemp.$$) rm -f chunktemp.$$
.br
If you are going to run the operation on more than one machine, it is
probably best to
put the files in a machine-specific location such as /usr/tmp.
Alternatively, you can use a more elaborate method for naming temporary files.
Define a variable at the top of your command file:
.br
$set tmpext `hostname`.$$
.br
and end your temporary file names with ".$tmpext".  (Note that "hostname" must
be enclosed in back-quotes not regular quotes - this character may not appear
properly here.)  In this case, you should
remove the files at the end of the command file with statements like:
.br
$if (-e chunktemp.$tmpext) rm -f chunktemp.$tmpext

The input and output files need not be in the same directory as the command
files; a path specification can precede each filename.  Also, the master
command file need not be in the current directory; the chunk command files
will be placed in the directory where it is located.  In this case, however,
you must enter the path to the input and output files relative to the command
file's directory, not relative to the current directory.

When Chunksetup is run, it first calls Tomopieces(1), which analyzes the
dimensions of the input file to determine how to chop it up optimally.
It then produces command files for extracting each chunk with Taperoutvol
and processing them,
numbered sequentially with 3-digit numbers.  If the name of the master command
file is "comfile.com", the first command file is comfile-001.com,
INPUTFILE is replaced by comfile-001.in, and OUTPUTFILE is replaced by
comfile-001.out, and similarly for the following files.  Each file contains a
command to remove
comfile-nnn.in, so only the output chunks accumulate as the files are run.
Chunksetup also produces a command file to reassemble the pieces,
comfile-finish.com, which will also delete the output chunks and the command
and log files for each of the chunks.  Finally, it produces a command file,
comfile-all.com, to run all of the chunks in sequence and run the finishing
command file at the end.

You have the option of running the top-level command file using "subm", or
running the individual command files and running the finishing command file
at the end.  If you have multiple processors available with access to the
current directory, you can use the Processchunks(1) script to run the jobs in
parallel on the various processors or machines, such as with:
.br
processchunks machine_list comfile
.br
where machine_list is a list of the machines to use, or just the number of
processor to use on the local machine.

.SS Options
Chunksetup uses the PIP package for input (see the manual page for pip(1)).
Options can be specified either as command line arguments (with the -)
or one per line in a command file (without the -):
INSERT OPTION TEXT HERE
.TP
.B -StandardInput
Read parameter entries from standard input

.SH AUTHOR
David Mastronarde  <mast@colorado.edu>
.SH SEE ALSO
tomopieces(1), taperoutvol(1), assemblevol(1), processchunks(1)
