.na
.nh
.TH xfalign 1 2.50 BL3DFS
.SH NAME
xfalign \- Automatic image alignment using xfsimplex
.SH SYNOPSIS
xfalign [options] <input image file>  <output transform file>
.SH DESCRIPTION
xfalign will search for the linear transformations that align each section to
the previous one in an image stack, or that align each section to a single
reference image.  It runs xfsimplex(1) repeatedly to find these 
transformations.  Because xfsimplex performs an incremental search for a local
optimum in alignment, it cannot find the right alignment if there is a large
displacement between the images.  Xfalign has options for initially finding
such displacements by cross-correlation using tiltxcorr(1), and for working
from a set of initial displacements computed previously.

These methods will work only on images where there are enough similar features 
between one section and the next to guide the alignment.  It may take some
experimentation to find settings that will give good results with a particular
kind of data.  The major factors to vary would be the choice of filter to be
applied before the search, and the amount of binning to apply to the images
in the search.  If images are not already roughly in alignment, the other
variable is whether cross-correlation will work adequately or whether another
method of prealignment is needed.

The images can be reduced in size by binning by a factor of 2, 4, 8, etc.
More reduction will make the search run faster and remove or average out
more high-frequency noise.  The default reduction is by a factor of 2; no
reduction should be needed for very small images and more reduction might be
helpful for large images (say, 1K x 1K or bigger).

Prefiltering is done with enhance(1) and uses the four parameters, Sigma1,
Sigma2, Radius1, Radius2.  Low-pass filtering to reduce noise (e.g.  Sigma2 =
0.05, Radius2 = 0.25) is somewhat redundant to binning the images, and may not
be needed with the default image reduction.  If the images contain large areas
of light and dark that correspond between sections and so are good cues for
alignment, then prefiltering, if any, should not include a high-pass filter
(i.e., leave Sigma1 at 0 or do not filter).  However, if there are large areas
of light and dark that do not correspond and would be misleading, a high-pass
filter should be applied (e.g., Sigma1 = 0.05 to flatten the contrast of areas
larger than 20-40 pixels).  If the cues for alignment are mostly relatively
fine features, it may help to enhance them with a band-pass filter.  This
can be done by setting a Sigma2 such as 0.05 and both Radius1 and Radius2,
such as 0.15 and 0.2, to provide a Gaussian fall-off with sigma of 0.05 around
the band from 0.15 to 0.2 reciprocal pixels.  Alternatively, a band-pass
filter can be specified with a single parameter, a negative entry for Sigma1,
such as -0.1 to get a band-pass filter centered at 0.14 reciprocal pixels.

If initial cross-correlations are chosen, a filter is included whose default
values will remove some high frequency noise (Sigma2 = 0.05, Radius2 = 0.25)
and prevent the correlation from being thrown off by very low frequency trends
in the images (Sigma1 = 0.01).  If there are large light and dark patches that
do not correspond well between images, the low frequency filter set by Sigma1
should be increased.  If images are particularly noisy, Radius2 could be
decreased.

When initial cross-correlation is used, the program will produce two transform
files, the one specified as your output file, and another file with the
initial transformations.  The name of the latter file will be the root name
of your output file, with the extension .xcxf (e.g., setname.xcxf if your
output file is setname.xf).
If some of the initial displacements are bad, there are two possible 
approaches to repairing the deficiencies.
You can use midas(1) to correct the final transformations, in which case you
will have to introduce any rotations, size changes or stretches manually as
well.  Alternatively, you can edit the initial transformations, then rerun
xfalign with the 
.B -initial
option specifying that existing .xcxf file, instead of the 
.B -prexcorr
option.  This would give xfalign a chance to find the more complex
linear transformations properly for the sections that had bad initial 
alignments the first time.

.SS Options

Options may be abbreviated to one to three letters, the minimum needed to
unambiguously specify the particular option.  The
.B -prexcorr
option cannot be used with either the
.B -ref
or the
.B -initial
options.

.TP
.B -skip <section list>
Skip the sections that are given in the
.I section list
argument; i.e., do not find the transform for aligning a listed section to
the previous one.  Section numbers are separated by the ',' character
for single sections or the '-' character for ranges.
Section numbers start with zero and go up to n-1.
The default is to use all of the sections.
.TP
.B -size <X,Y>
Set the X and Y dimensions of the images extracted by newstack to be 
fed to Xfsimplex.
The default size is the whole image.
.TP
.B -offset <X,Y>
When extracting an image smaller than the whole, use this option to
offset the images by the given amounts in X and Y.  The offset is from 
the old
center of the image to the center of the extracted area; a positive X offset
will extract a subarea whose center is to the right of the original center.
.TP
.B -initial <transform file>
Search for transformations starting from the transforms in the existing
.I transform file.
.TP
.B -filter <s1,s2,r1,r2>
Filter images before searching with the Sigma1, Sigma2, Radius1, and Radius2
values given by
.I s1,s2,r1,r2.
Do not leave spaces between these entries.
.TP
.B -reduce <value>
In xfsimplex, reduce images by a factor of 2 the number of times given by
.I value.
.TP
.B -matt <value>
In xfsimplex, omit areas of images near their edges.  Enter a
.I
value
< 1 to indicate the fraction of the image extent to omit, or > 1 to indicate
the number of pixels to omit.
.TP
.B -params <value>
In xfsimplex, search for the number of semi-natural parameters given by
.I value.
Enter 2 to search only for translations, 3 to search for rotations in
addition, 4 to search for magnifications as well, or 6 to search for the
full transformation as represented by semi-natural parameters (rotation,
magnification, difference between X and Y axis rotation, difference between
X and Y axis stretch.)  The latter does not have any known advantage over
the default case, in which xfsimplex searches
for the transformation by varying the formal parameters of the 2 by 2
transformation matrix.
.TP
.B -bilinear
With this option, xfsimplex will use bilinear rather than nearest neighbor
interpolation when transforming an image.  This slower option should be
used when trying to find accurate alignments between small images.
.TP
.B -ref <image file>
Align each image in the input image stack to the single image in the given
.I image file.
.TP
.B -prexcorr
Find preliminary translational alignments with tiltxcorr(1).
.TP
.B -xcfilter <s1,s2,r1,r2>
Change the filter that is used in cross-correlation by tiltxcorr(1) to
have Sigma1, Sigma2, Radius1, Radius2 as given by
.I s1,s2,r1,r2.
.SH FILES
When using prealignment by cross-correlation, the initial transforms will
be placed into a file with the same root name as the transform output file but
with the extension .xcxf.
If an output file already exists a backup image
of the original is created
with the ~ extension.
.SH AUTHOR
David Mastronarde
.SH SEE ALSO
xfsimplex(1), tiltxcorr(1), newstack(1), enhance(1)
.SH BUGS
Report bugs to mast@colorado.edu
