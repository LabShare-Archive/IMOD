.na
.nh
.TH raw2mrc 1 2.50 BL3DEMC
.SH NAME
raw2mrc \- Create an MRC image stack from raw image data.
.SH SYNOPSIS
raw2mrc [options] <raw image files...> <mrc image file>
.SH DESCRIPTION
raw2mrc can be used to create mrc image files from many types
of raw binary image data.  
Command line options are used to adjust the image size and
to skip the input image header.
Several raw images can be combined into one file by listing all of their
filenames before the name of the output file.
.SS Options
.TP
.B -x <width>
Set the width of the image, the default value is 640 pixels.
.TP
.B -y <height>
Set the height of the input image, 
the default is 480 pixels.
.TP
.B -z <sections>
Set the number of sections in each input image file,
the default is 1.
.TP
.B -t <type>
Set the type of input data, the default byte data. 
The allowed types are
byte, short, ushort, long, ulong, float and rgb.
Where byte is 8-bit integer values, short is 16-bit signed values,
ushort is 16-bit unsigned values, long is 32-bit signed values,
ulong is 32-bit unsigned values, float is a 32-bit floating 
point value and rgb is three byte values--one for each color.
.TP
.B -s
Swap input bytes.
.TP
.B -o <offset>
Set the offset value used at the beginning of the file, 
the default is 0.
.TP
.B -oz <offset>
Set the offset value used at the end of each section,
the default offset is 0.
.TP
.B -f
Flip the images around the X axis.
.TP
.B -d
Divide unsigned 16-bit values or any 32-bit values by 2.  The default 
for unsigned short values is to subtract 32767, which
allows all unsigned short values to be stored as signed short integers in the
MRC file.  Use this option if you do not want negative numbers and do not
care about the loss of precision.  If the values in the input files are all
less than 32768, then specify that the input data are short rather than ushort.
.TP
.B -c
Convert 32-bit integers to signed 16-bit integers instead of to floating point
numbers.  If the type is long, you can use this option alone if values are 
between -32768 and 32767; or you can use the option with
.B -d
to divide by 2 if values are between -65536 and 65535.  If you specify the
type as ulong, then by default 32767 will be subtracted from the input values,
so that values from 0 to 65534 can be stored as -32767 to 32767.  Again,
.B -d
can be used to divide by 2 instead, so that values from 0 to 65534 can be
stored as 0 to 32767.  If values in the input files are all less than 32768, 
then specify the type as long instead of ulong.

.SH FILES
If the output file already exists, it will be made a backup file by adding ~
to its name.
.SH AUTHORS
Jim Kremer, David Mastronarde
.SH SEE ALSO
tif2mrc(1), tomrc(1), frommrc(1), mrcv(1)
.SH BUGS
Email bug reports to mast@colorado.edu.
