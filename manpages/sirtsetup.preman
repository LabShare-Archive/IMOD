.na
.nh
.TH sirtsetup 1 3.10.15 BL3DEMC
.SH NAME
sirtsetup \- Produce multiple command files for iterative reconstruction
.SH SYNOPSIS
sirtsetup [options] <Tilt command file>
.SH DESCRIPTION
Sirtsetup sets up command files to do a form of Simultaneous Iterative
Reconstruction Technique (SIRT) using backprojection and reprojection with the
Tilt(1) program.  Because reprojection is done with Tilt(1) and not
Xyzproj(1), the reconstruction can include options such as local alignments
and Z factors.
The SIRT uses the following scheme:
  1) An initial reconstruction is computed, using a filter function that is
either flat or a mixture of flat and R-weighted.
  2) The reconstruction is reprojected with Tilt(1).
  3) The original projections are subtracted from these reprojections.
  4) This reprojection difference is backprojected with a flat filter function
and appropriate scaling to distribute differences among the pixels along a
ray.
  5) The error reconstruction is subtracted from the initial reconstruction.

To iterate, steps 2 through 5 are repeated with the original reconstruction
replaced by the corrected reconstruction created in step 5.  These steps can
all be done within Tilt(1) provided that a single reconstructed slice
backprojects from, and reprojects to, a set of lines at one Y value in the
input projection images.  When this is the case, all of the selected
iterations are done internally as much as possible, and the results are
written to files only at the iterations that you specify.  This one-to-one
relationship does not exist when there are
Z-factors (produced by the stretching solution in Tiltalign(1) unless you
choose not to use them), variable X-axis tilt (needed when correcting for beam
tilt), or local alignments.  In any of those cases, steps 2 and 3 are done
in Tilt(1) and the entire reprojection difference
must be written to file, then steps 4 and 5 are done in another run of Tilt(1)
and the new reconstruction must be written to file again.
Thus, on each iteration a file is produced by step 5, named
setname.srec00, setname.srec01, etc.  

After running some iterations of SIRT, it is easy to
do additional iterations simply by running this script again.

For data sets with X-axis tilt where the iterations are done internally,
the default is to save the untilted slices that
were computed in a file separate from the reconstruction slices, which are
obtained by interpolating from the untilted slices.  This capability is
crucial when saving data from several different iterations with cryoEM data sets,
because otherwise the multiple interpolations of the data blur out the
reconstruction and lead to instabilities.  When doing a large reconstruction,
this secondary output can be suppressed with the "-sk" option (see below).
Edge effects may still build up with cryoEM data when the computations are
stopped and restarted several times, so it is recommended that the full
reconstruction be produced in a single run after the desired number of
iterations is determined.  These considerations do not apply (and no vertical
slice file is produced) when there is no X-axis tilt or when there is a beam
tilt correction or other alignment features that prevent Tilt(1) from running
the iterations internally.

Sirtsetup is meant to be used with a command file for running Tilt(1) that has
all of the entries produced when running through eTomo.  There is one main
restriction on this file.  The reconstruction must be the same size in X and Y
as the aligned stack; this means both a SLICE entry and a WIDTH
entry will be ignored if present.  In addition, an X shift specified with the
first value in a SHIFT entry will also be ignored.
Sirtsetup does allow you to reconstruct a subarea that can be
offset in Y (along the tilt axis) but must be centered in X.  It extracts the
specified subarea from the full aligned stack into a new stack that is used
for the reconstruction, and adjusts the SUBSETSTART entry in the tilt command
file to indicate the starting coordinates of this subarea.

Displacing a subset laterally is more complicated because it would require:
1) running Tiltalign(1) with the AxisXShift option specifying the offset;
2) making the subarea from the raw stack with Newstack(1), using the same X
offset in the -offset option; 3) adding the same offset as a second number in
the OFFSET entry to Tilt(1), as well as adjusting the X component of
SUBSETSTART.

If the tilt command file takes the log of the projection data and the
iterations are not being done internally in Tilt(1), then the
starting command file will use Densnorm(1) to create a new stack with the
logarithm of the projections.  This log stack will be used in all of the
operations listed above.  Such a stack is not needed for internal operations.

If you are not taking the log, you may still want to scale the projection data
to provide a mass normalization.  You can do this with Densnorm(1).  If you
just want a 
relative normalization to compensate for different exposures, you have two
choices: 1) Use Densnorm(1) to create a normalized stack, then either rename
it to the aligned stack name or modify the
input file name in the tilt command file.  2) Use Densnorm(1) to create a file
with weighting factors, and add a WeightFile entry to the tilt command file.
If you want an absolute normalization so that you can experiment with
constraining the data to be positive or negative, then you need to create a
normalized stack and either rename
it to the aligned stack name or change the input file name in the command
file.
If you use Densnorm(1) to normalize the data absolutely, they will be negative
values, in which case the 
.B -zn
option would be used to constrain the reconstruction to negative values.

If the name of the command file is tiltroot.com, this script produces files
named tiltroot_sirt-*.com.  These files can be run from the command line with
   processchunks machine_list tiltroot_sirt
.br
or from the generic parallel processing interface in eTomo.

Whenever a difference reconstruction is computed, its mean and standard
deviation of the central portion are determined and output to the log file for
the individual Tilt(1) run.  The summary values from these statistics are
gathered in the tiltroot_sirt-finish.log file.  If the reconstruction was done
in chunks, there will be multiple lines for each iteration.  The last two
numbers on each line are the mean and the standard deviation of the difference
reconstruction.  The fall in the latter value provides some indication of the
progress of the iterations.

.SS Options
Sirtsetup uses the PIP package for input (see the manual page
for pip(1)).  Options can be specified either as command line
arguments (with the -) or one per line in a command file
(without the -):
INSERT OPTION TEXT HERE
.TP
.B -StandardInput
Read parameter entries from standard input

.SH EXAMPLE
It is important that the reconstruction include all significant
material, including gold fiducials on both sides of a section, if any.  Thus,
in Tomogram Positioning, you need to draw contours that include all of the
fiducials.

If the number of desired iterations is not known in advance, a subarea can be
reconstructed with the following steps:

Prepare the full aligned stack as usual in eTomo.  Examine the aligned stack
and select the size of the subarea, and an offset in Y if desired.

If you are using local alignments and do not have a GPU, you can turn off the
local alignments to speed up this test.

Set parameters in the Tomogram Generation panel of eTomo then 
press Postpone to get the command file saved.

Run sirtsetup with the needed number of iterations, and retaining as many
reconstructions as might be needed.  For example, if you are confident that at
least 15 iterations are needed and want to run 25, you might use
   sirtsetup -su 512,256 -yo 600 -it 25 -le 15,17,19,21,23 tilt.com

If storage space is an issue, also use "-sc -20000,20000".

Run processchunks on "tilt_sirt".

Load the trial reconstructions into 3dmod
   3dmod -Y setname.srec*
.br
for one axis of a dual axis set, or for a single axis set:
   3dmod -Y setname_full.srec*

If you need to do more iterations, just rerun sirtsetup and process some more.
Once you have decided on the right number of iterations, you should 
rename any of the .srec and/or .sint files that you want to keep.

Turn local alignments back on if they were turned off.
Generate a reconstruction by standard back-projection if desired.  If not, be
sure to press Postpone or Done in the Tomogram Generation panel to ensure that
tilt.com is saved.

Run sirtsetup with the needed number of iterations, e.g.,
   sirtsetup -st -it 17 -cl tilt.com

The "-st" option makes it start from the beginning and the "-cl" option will
remove all the previous trial reconstructions.

If you still want to leave more than one iteration, then disk space becomes a
serious issue.  For a single axis data set, the best approach would be to run
Trimvol on the standard reconstruction.  Then extract the trimvol command
from etomo_err.log, e.g.:
    grep trimvol etomo_err.log
.br
Cut and paste the options (excluding "trimvol" and the file names) and enter
them within quotes, e.g.:
    sirtsetup -tr "-rx -f -z 30,160 -sz 50,99" -it 19 -le 15-19 tilt.com

Otherwise, especially for a dual-axis data set where it is not convenient to
run Trimvol in eTomo, use "-sc -20000,20000" instead of the "-tr" option.

.SH FILES
This procedure creates many large files, so it generally purges a previous
version of each file before a new one is created.  The files produced
during the procedure are:
.nf
setname.alisub      Subarea of aligned stack if any
setname.alilog10    Log of projections if the tilt command file contains
                         a LOG entry
setname.srec00      Initial reconstruction
setname.srecnn      Numbered iterative reconstructions
setname.diff        Difference of reprojection and original projections
setname.sintnn      Iterative reconstruction scaled to integers
setname.strmnn      Iterative reconstruction run through Trimvol(1)
setname.vsrnn       Vertical slice file used with internal iterations
.fi
.br
When SIRT is done internally, only setname.srecnn, setname.sintnn, 
setname.strmnn, and setname.vsrnn are produced.
.SH AUTHOR
David Mastronarde  

.SH SEE ALSO
tilt(1), densnorm(1), newstack(1), processchunks(1), splittilt(1), trimvol(1)

.SH BUGS
There is not yet a way to tell when to stop iterating.  There are low
frequency artifacts, particularly near edges.

Email bug reports to mast@colorado.edu.
