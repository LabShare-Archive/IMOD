.na
.nh
.TH edgepatches 1 3.10.5 BL3DEMC
.SH NAME
edgepatches \- Initial alignment in stitching montage of overlapping tomograms
.SH SYNOPSIS
edgepatches  options  supermontage_info_file
.SH DESCRIPTION
Edgepatches is a Python program that performs the first alignment steps for stitching
together tomograms that overlap laterally, which are referred to as a
supermontage.  See the Setupstitch(1) man page for an overview of the
stitching process.  Edgepatches uses the
master file with information about the tomograms and their overlap
regions produced by Setupstitch(1), referred to as a supermontage info file.
It performs 2D and 3D cross-correlations to determine the shifts between the
volumes, then
correlates local patches between overlapping volumes to obtain a set of 
local displacements in the overlap zones.  
.P
To analyze overlap zones, enter either the -all option to analyze all edges,
or one or more of the options for specifying a range of X, Y, or Z to analyze.
By default, the program will not redo the global cross-correlations to find
the shifts between pieces, but will redo the local patch correlations.  Use
the -redo option to force it to redo the global correlations, or the -skip
option to make it skip any patch correlations that were already done.
.P
The patch correlations are run similarly to when aligning dual-axis
tomograms.  However, the default parameters are based on binned data (~2 nm
pixel) and should not be relied on in general; patch sizes may
need to be increased substantially for unbinned data.  Another difference is
that region models for
both the upper and the lower piece are applied to determine the limits for
patches in an overlap zone.  Another important difference is in the
consequences of having bad vectors.  With dual-axis tomograms, the vectors are
fed directly into Findwarp(1), which has outlier elimination that usually
eliminates the most aberrant vectors.  The vectors produced here are going to
be processed by Stitchalign(1), which does not do its own outlier elimination,
so bad
displacements will be carried through into the final warped volumes.  It is
thus crucial to run Fitpatches(1) after running this program, and after
editing any patches.  Fitpatches(1) will show you the results of finding
local transformations in Findwarp(1) and will store information on residuals
and on which vectors are outliers into a new patch file.  This information
will be used by Stitchalign(1) to eliminate some bad vectors.  In general, you
should use the information from Fitpatches(1) in order to adjust the
parameters used in Edgepatches to produce the best vectors possible, and then
edit out bad vectors manually if necessary.
.SH OPTIONS
Edgepatches uses the PIP package for input (see the manual page
for pip(1)).  Options can be specified either as command line
arguments (with the -) or one per line in a command file
(without the -).  Options can be abbreviated to unique letters; the currently
valid abbreviations for short names are shown in parentheses.
INSERT OPTION TEXT HERE
.TP
.B -StandardInput
Read parameter entries from standard input

.SS Dealing with Bad Initial Shifts
There are several signs that the program has failed to find the correct
initial shift between two volumes.  Although the most noticeable sign is that the patch
vectors look terrible, the first indicator of such trouble is with output
like this from the 3D correlation of subvolumes:

  Correlating subvolumes to find 3D shift
  Shift from correlation: 28.21, -17.78, 11.99    Total shift ...
  Computing patch correlations in edge test_x1y1-2z1
  Number of patches in X, Y, and Z: 61 31 5
   64.47 correlations per position, Fourier correlations computed  131 times

First, the X and Y shifts from this correlation should generally be much
closer to 0 since an initial X and Y shift was already determined from
projections, so the large values (28.21 and -17.78) indicate that the volumes
do not really correspond.  Second, in the patch correlations, the large number
of positions tested at each patch (64) and the large number of times that it
resorts to global Fourier correlations (131) indicate that it is probably
correlating patches that do not correspond.  When the initial 2D shift was
correct, this data set gave:

  Shift from correlation: 2.56, -1.87, -9.24    Total shift ...
  Computing patch correlations in edge test_x1y1-2z1
  Number of patches in X, Y, and Z: 67 59 5
   31.45 correlations per position, Fourier correlations computed    2 times

The X and Y shifts are now much lower, and only 31 correlations needed to be
evaluated at each patch position (a minimum of 27 is required).

When there is evidence that the 2D correlation has failed for an edge, the
first step is to examine the shift that was produced using Midas(1).  For each
edge, files are produced with extensions ".projst" and ".projxf", containing
the two projection images and the shift transformation, respectively.  Run:
   midas edgename.projst edgename.projxf

There are several scenarios:

1) The pieces are skewed and the projections do not overlap enough along the
long dimension of the edge.  Rerun the affected edges with a command that includes
"-redo -long 1.0 -ignore".

2) The actual overlap zone is much wider than the nominal overlap used in
Setupstitch(1), and the correlation failed because of insufficient overlap in
the projections when they are lined up.  There are several options here: a)
Rerun the affected edge with more overlap, using "-redo -over nnn -ignore", where
"nnn" is an estimated overlap for the affected edge.  b) If many edges have
this problem, you could start over with Setupstitch(1) and a larger overlap.
c) If there is enough overlapping material in the two projections, you can
adjust the shift in Midas(1) until they line up, save the transform, and rerun
with "-redo -use"

3) The correlation failed and is unlikely ever to work, such as if the actual
overlap is much less than the nominal one.  Here is there no choice but to
adjust the shift in Midas(1) and rerun with "-redo -use".

Finally, note that existing "shift" entries in the Edge sections of the info file
determine several things: the location and size of areas projected for the 2D
correlation; the location of the subvolumes for initial 3D correlation; and
the location where patch correlation starts.  This means that if the shift is
wrong, you need to include the "-ignore" option to make it use the original,
nominal shifts instead.  It also means that, if necessary, you can insert the
correct shift in the file to bypass the initial correlations.  To do this,
find an exactly corresponding feature in the two volumes in question and
record its X, Y, Z coordinates in each volume.  Subtract the coordinates in
the lower volume (the one to the left in X or below in Y) from the coordinates
in the upper volume and insert the result into the shift entry.

.SH FILES
When the info file is modified, the existing copy is renamed to a backup
with the ~ extension.  This is done only once per run of the program, although
the program will save the info file after each overlap zone is processed.
.SH AUTHOR
.nf
David Mastronarde
.fi
.SH SEE ALSO
corrsearch3d(1), xyzproj(1), tiltxcorr(1), setupstitch(1), fitpatches(1), stitchalign(1),
tomostitch(1), midas(1)
.SH BUGS
Standard comments in the info file, starting with #, will not be preserved.
However, key-value pairs like
  comment1 = This is a difficult edge
.br
will be retained in the same section where they occur.
.P
Email bug reports to mast@colorado.edu.
.SH HISTORY
Edgepatches originally included all the operations now performed by Setupstitch.
