.na
.nh
.TH imodmop 1 3.10.6 BL3DEMC
.SH NAME
imodmop -\ extract image data inside of IMOD model contours
.SH SYNOPSIS
imodmop [options] <model_file> <image_file> <image_output_file>
.SH DESCRIPTION
The "mop" in imodmop stands for MOdel Painter; the program can be used to
color in data inside of model contours.  It will operate on all modes of 
input data, included Fourier transforms and color images in an MRC file.
Its output file can be either the
same mode as the input data, or an RGB file where the pixels have been
colored by the colors of the model objects.  In addition, the painted output
can be directed through Xyzproj(1) to produce projections at a series of tilt
angles around one axis, an operation formerly done by a program called
imodcmopp.  Again, this output can be monochrome or color.
.P
By default, the program operates only on closed contour objects, but open and
scattered point objects can also be used.  For open contours, it is possible
to paint a cylinder of data around each contour by specifying the object
number and a diameter for the cylinder.  There are options for painting either
circles or spheres of scattered point objects; if the points have individual
sizes they will be used as the radius for each area painted.
.P
Contours in a closed contour object may be nested to any level, and regions
that are topologically inside the surface (odd nested levels) will be painted,
and enclosed regions that are topologically outside (even nested levels) will
be cleared (e.g., the holes will be excluded from donuts).  An object defined
as having its front face inside instead of outside will be treated in the
reverse fashion, i.e., odd levels will be cleared and even levels will be
painted.  The painting is done in two passes, with outside-facing objects done
first, then inside facing-ones.  This means that if you have one object inside
another and you want to paint the region between the two, then you need to
define the inner object as inside-facing.  However, then you will not be able
to paint any other objects inside of that, since they will be cleared by the
painting of the inside-facing object.
.P
The data need to be scaled for output in two different situations: when a
color volume is being produced, and when a projection series is being
produced.  In the first case, scaling can be controlled with the 
.B -scale
option.  In the second case, data are scaled to bytes after projection
regardless of whether monochrome or color projections are being made.  The
scaling here can be controlled with the
.B -bw 
option in either case.  In addition, the differential scaling through the
series of angles by Xyzproj(1) is controlled with the 
.B -constant
option.  Some experimentation may be needed to get reasonable results.
.P 
If you are modeling in an FFT, you can load the FFT into 3dmod(1) either
non-mirrored or mirrored.  However, if you load it mirrored (the default),
then be sure to model only in the right half of the FFT.
.SS Options
Imodmop uses the PIP package for input (see the manual page for pip(1)).
Options can be specified either as command line arguments (with the -)
or one per line in a command file (without the -):
INSERT OPTION TEXT HERE
.TP
.B -StandardInput
Read parameter entries from standard input

.SH AUTHORS
David Mastronarde
.br
Based on imodmop and imodcmopp by James Kremer.
.SH SEE ALSO
3dmod(1), xyzproj(1)
.SH BUGS
Pixels inside closed contours are selected by converting to a scan contour
that is used to define the pixels to paint, instead of directly testing
whether each pixel is inside the contour.  If this is not accurate enough,
then direct testing could be added, although this will be much slower.
.P
Email bug reports to mast@colorado.edu.
