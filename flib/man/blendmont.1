     BBoouullddeerr LLaabboorraattoorryy ffoorr 33--DDiimmeennsssiioonnaall EElleeccttrroonn MMiiccrroossccooppyy ooff CCeellllss

BLENDMONT(1)							   BLENDMONT(1)

NNAAMMEE
	blendmont - aligns and blends overlapping edges of montaged images

SSYYNNOOPPSSIISS
	blendmont  [options]

DDEESSCCRRIIPPTTIIOONN

  BLENDMONT will take montaged images, blend their overlapping edges
  together, and output the blended images with essentially no overlap.
  Transformations can be applied to align serial sections, and
  densities can be floated over whole sections so that density
  occupies the maximum range for each section.  The program can also
  correct for minor or substantial displacements between pieces, using
  cross-correlation to find substantial shifts.  Multinegative montages
  can also be handled, with each negative transformed so as to produce
  the best fit between the negatives.

  The program performs these feats by examining each edge, or region
  of overlap, between adjacent pieces, and deriving a function that
  maps pixels in one piece to corresponding pixels in the adjacent
  piece.  These "edge functions" are stored in two separate files (for
  pieces that are adjacent in X or Y, respectively).  Thus, even if one
  needs to run the program more than once on the same input images,
  the edge functions need to be calculated only once, since they can
  be read from the files on later runs.  However, if the input image
  file is changed in any way, the edge functions must be recalculated.

  To blend images at an overlap zone, the program considers each pixel 
  in the output image in turn.  It finds the two corresponding 
  positions (in the two adjacent input pieces) whose weighted average 
  equals the position of the desired output pixel, where the weights
  are proportional to the distance across the overlap zone.  Near one
  edge of the overlap zone, the output pixel has very nearly the same
  position as the corresponding pixel in the nearby piece; in
  the middle of the overlap zone, the output pixel has a position
  midway between the positions of the corresponding pixels in the two
  pieces.

  If pieces are shifted by more than a few pixels from the positions
  specified by their piece coordinates, then the program will not be
  able to find the edge functions without doing an initial 
  cross-correlation between the regions that overlap in adjacent
  pieces.  Thus, if your montage is "sloppy" enough, you should select
  the option for initial cross-correlations.
  
  If the pieces are shifted at all from the positions specified by
  their piece coordinates, the program can correct for this.  It can
  take the information about the shift between each pair of overlapping
  pieces and use it to find the amounts to shift each piece so as to
  fit the pieces together best.  If the shifts are large, then an
  initial cross-correlation should be selected; otherwise this step is
  not needed.  There are three ways to implement this correction step.
  One is based solely on the information in the edge functions.
  Another is a hybrid method based  on both cross-correlation and edge
  functions; the program will solve for shifts twice, using the
  displacements implied by the edge  functions then those implied by
  correlations, and select the solution that gives the smallest mean
  error.  The third method is based on cross-correlations alone and is
  not as reliable as the hybrid method.  This method should be used
  with older data if it is important to have an image stack that
  exactly matches that produce by Blendmont prior to June 1, 2001,
  when the hybrid option was implemented. It might also be useful in
  cases where the edge functions are not reliable, such as when there
  are large blank areas in the edge regions. 

  In any case where cross-correlations are being computed, the program
  will write the displacements between pieces into a file with the
  extension ".ecd".  On another run of the program, you can choose to
  have these displacements read in from the file, just as edge
  functions can be read in instead of recomputed.  This allows you to
  edit bad displacements with Midas, then use Blendmont to get a
  stack with pieces properly shifted into register.

  If sections come from more than one negative, this may be specified
  in either of two ways.  If every section has the same division of
  pieces into negatives, then one can specify this universal division 
  into negatives as an interactive input to the program.
  Alternatively, one may add negative numbers after the z coordinates
  in the file of piece coordinates.  The only restriction on these
  numbers is that they should be non-zero, and every piece from the
  same negative should have the same number.  Thus, one could number
  negatives 1, 2, 3 ... in each section that has multiple negatives,
  or one could use the identifying number on each negative.

  When pieces of a section come from more than one negative, the
  program uses the edge functions between the negatives to determine
  how each negative should be rotated and translated to align it with
  adjacent negatives.  This collection of rotations and translations
  between adjacent negatives is then resolved into a single rotation
  and translation for each negative, so as to bring all of the
  negatives into best alignment.  Blending of edges is performed after
  such rotations and translations have been applied.

  When you specify the maximum frame size and minimum overlap of the
  output image, the program will pick the largest frame size less than
  that maximum, with the smallest overlap greater than that minimum,
  so that the resulting image will contain at least as many pixels as
  the original input image.  It picks a frame size that is a multiple
  of 2 and has no prime factor greater than 19 (so that fourier
  transforms can be run on the resulting pieces).

  Blendmont uses the PIP package for input (see the manual page for pip(1))
  and can still take sequential input interactively, to maintain compatibility
  with old command files.  The following options can be specified either as
  command line arguments (with the -) or one per line in a command file or
  parameter file (without the -):

  -imin OR -ImageInputFile   File name
     Montaged image input file to be blended.

  -plin OR -PieceListInput   File name
     File with list of piece coordinates for image input file.

  -imout OR -ImageOutputFile   File name
     Output file for blended images.

  -plout OR -PieceListOutput   File name
     File for list of coordinates of pieces in output image file.  This entry
     may be omitted if the output images are not being cut into pieces.

  -rootname OR -RootNameForEdges   Text string
     Root name for edge function and .ecd files.  Two files will be created or
     sought for, with the extensions .xef and .yef attached to this root name.

  -mode OR -ModeToOutput   Integer
     Mode for output file: 0 for bytes, 1 for integers, 2 for reals.  The
     default is the same mode as the input file.

  -float OR -FloatToRange   (Boolean entry, no value expected)
     Stretch intensities of each output section to fill range of data mode.

  -xform OR -TransformFile   File name
     File with g transformations to apply to align the images.

  -center OR -TransformCenterXandY   Two floats
     X and Y coordinates of center of transformations.  The default is the
     center of the input image.

  -sloppy OR -SloppyMontage   (Boolean entry, no value expected)
     Do initial cross-correlations for finding edge functions and shift pieces
     to minimize displacements in the overlap zones

  -shift OR -ShiftPieces   (Boolean entry, no value expected)
     Shift pieces to minimize displacements in the overlap zones.  The default
     is to use information from edge functions and from cross-correlations for
     each section and pick the one that gives lowest error.

  -edge OR -ShiftFromEdges   (Boolean entry, no value expected)
     Use only edge functions for shifting pieces.

  -xcorr OR -ShiftFromXcorrs   (Boolean entry, no value expected)
     Use only cross-correlations of overlap zones for shifting pieces (legacy
     behavior).

  -readxcorr OR -ReadInXcorrs   (Boolean entry, no value expected)
     Read displacements in the overlap zones from an existing .ecd file
     instead of computing correlations.

  -sections OR -SectionsToDo   List of integer ranges
     List of sections to blend into output file; comma-separated ranges are
     allowed.

  -xminmax OR -StartingAndEndingX   Two integers
     Minimum and maximum X index coordinates to output (numbered from 0).  The
     default is to output the entire image.

  -yminmax OR -StartingAndEndingY   Two integers
     Minimum and maximum Y index coordinates to output.

  -maxsize OR -MaximumNewSizeXandY   Two integers
     Maximum size in X and Y of pieces in output file.  The default is to make
     output be a single piece, unless it exceeds the limits of the program.

  -minoverlap OR -MinimumOverlapXandY   Two integers
     Minimum overlap between pieces in X and Y in output file.  The default is
     an overlap of 2.

  -oldedge OR -OldEdgeFunctions   (Boolean entry, no value expected)
     Use existing edge functions, if they exist, rather than computing new
     ones.

  -perneg OR -FramesPerNegativeXandY   Two integers
     Number of frames in X and Y per negative for a multi-negative montage.
     This option could be used instead of having negative numbers in the piece
     list file.

  -missing OR -MissingFromFirstNegativeXandY   Two integers
     Number of pieces missing from the first negative in X and Y.  For
     example, if there are 3 negatives across, with 2, 4, and 1 pieces in X
     from each, then the number missing is 2.

  -width OR -BlendingWidthXandY   Two integers
     Width in X and Y across which to blend overlaps.  The default is:
     80% of the overlap zone width for overlap width less than 63,
     50 pixels for overlap width between 63 and 100, or
     50% of the overlap width for overlap width greater than 100.

  -param OR -ParameterFile   Parameter file
     Read parameter entries from file.

  -help OR -usage   (Boolean entry, no value expected)
     Print help output.

  -StandardInput
     Read parameter entries from standard input.


  If there are no command-line arguments, Blendmont takes sequential input
  the old way, with the following entries:

  Input image file

  Output image file

  Data mode for output file (the default is same as mode of input)

  1 to float each section to maximum range for the data mode, 0 not to

  Name of file of g transforms to apply to align the sections, or a
   	blank line for no transforms

  Name of input file with list of piece coordinates

  IF this file has entries specifying that pieces are on different
  negatives, enter 1 to do an initial cross-correlation in the overlap
  zones to find the average displacement between pieces

  IF this file does NOT have any entries specifying that pieces belong
  to different negatives, there are several possibilities for either
  specifying negatives or correcting for displacements between frames.
  Use the negative of an option to do initial cross-correlations to
  correct for sloppy montages:

   	Enter 1 or -1 to specify how the sections should be divided
           into negatives
        OR 2 or -2 to use edge functions to find a shift for each frame
           that aligns the frames as well as possible
        OR 3 or -3 to use cross-correlations exclusively, rather than
           edge functions to find the best shift for each frame
           (obsolete, use 5/-5 except to replicate old data)
        OR 4 or -4 to use only cross-correlations read from an edge
           correlation displacement file to find the best shifts
           (obsolete, use 6/-6 except to replicate old data)
        OR 5 or -5 to use both cross-correlations and edge functions
           (whichever is better) to find the best shifts
        OR 6 or -6 to use both cross-correlations read from a file and
           edge functions to find the best shifts
  	OR 0 for none of these options

     IF you enter 1 or 2 to specify division into negatives, enter 2 
           lines:

   	# of frames (pieces) per negative in the X direction, and the
   	    # of frames missing from the left-most negative.  E.g., if
   	    there are 2 frames from the left-most negative, 4 from the
   	    middle one, and 1 from the right-most one, there are 4
   	    frames per negative, with 2 missing from the left-most one

   	# of frames (pieces) per negative in the Y direction, and the
   	    # of frames missing from the bottom-most negative.

  Name of new file for list of coordinates of pieces in the output file, or
  Return to skip making this file, which is not needed when the output image
  is a single piece.

  IF you have g transforms, enter on the next line:
     X and Y center coordinates of the transforms, or / to accept the
     default, which is the center of the input image.

  List of sections to be included in output file, or / to include all
     sections from the input file in the output file.  Ranges may be
     entered (e.g. 0-5,8-14,17-23)

  Minimum and maximum X, and minimum and maximum Y coordinates that
   	should be included in the output image.  Enter "/" to obtain
   	the entire input image.

  Maximum limit on the X and Y frame size for output pieces, and
   	minimum limit on overlap between output pieces.  The program
   	will then choose new frame sizes and overlaps based on these
   	limits

  0 to accept the program's choices of frame size and overlap.  When
   	running interactively, entering 1 will allow you to loop back
   	and enter new minimum and maximum X and Y coordinates and a
   	new maximum frame and minimum overlap.  Note that on the first
        two entries, the program will enforce a minimum overlap of 2;
        if for some reason you want an overlap of 0, you need to loop
        back so that you enter the frame size and overlap 3 times.

  0 to build new files of edge functions, 1 to use old files that were
   	generated on a previous run of the program

  Root filename for edge function files. 

  Widths over which to blend positions at an edge, in the X and Y directions.


HHIISSTTOORRYY
  Written by David Mastronarde, February 1989
  12/21/98: added ability to do initial cross-correlation and to find best
  shifts to correct for sloppy montages
  6/1/01: implemented ability to write and read in edge correlation
  displacements; added a search step to improve on cross-correlations  
  8/9/03: converted to PIP input.
