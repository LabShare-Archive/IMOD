#############################################################################
#
set c_includes = '-I$(QTDIR)/include'

# add -I$opengl_lib if it's not on the system library path
echo 'LDFLAGS = -L$(LIBDIR)' >> $configure

# DNM 8/27/01: Needed for large files to work right.  Use a -D define instead
# of #define in imodconfig because it must precede all system includes.
set defines = -D_FILE_OFFSET_BITS=64

echo "SHELL     = /bin/csh"         >> $configure

echo "CC        = gcc"              >> $configure
echo "FC        = f77"              >> $configure
#
# tell the C routines being called by Fortran that they need two __
#
echo '#define G77__HACK' >> $hconfigure

# Needed under tcsh 6.12 in RH 8.0 to avoid getting two \ out
cat << EOF >> $configure
CP        = \\cp
FIND      = \\find
EOF

set shared_libs = false

set wrapper = ""

if ($shared_libs != false) then
	echo "AR      = ld"                 >> $configure
	echo "ARCPP   = g++"                >> $configure
	echo "ARFLAGS = $flags -shared -o"    >> $configure
	echo "RANLIB    = true"                     >> $configure
	echo "LIBEXT  = so"                 >> $configure
	#
	# With Intel compiler, call an ld wrapper to strip out the -static flag
	# make blockio into a static libary  to drag in stat64 properly, and 
	# exclude it from libim.so
	#
	if ($compiler == intel) then
		set wrapper = "-Qlocation,link,$source_dir/scripts"
		set blockio = libblockio.a
		set imsubsobj = '[^b]*.o'
	endif
else
	echo "AR      = ar"                 >> $configure
	echo "ARCPP   = ar"                 >> $configure
	echo "ARFLAGS = ruv"                >> $configure
	echo "RANLIB    = ranlib"            >> $configure
	echo "LIBEXT  = a"                  >> $configure
endif

echo 'MAKELIB   = $(AR) $(ARFLAGS)' >> $configure
echo 'MAKELIBCPP = $(ARCPP) $(ARFLAGS)' >> $configure
echo "MAKELIBSO = g++ $flags -shared -o" >> $configure


echo "CLIBS   = -lc -lm" >> $configure
echo 'LIBS    = $(CLIBS)'  >> $configure
echo 'FORTCLIBS = '  >> $configure

echo "XLIBS   = -lXm -lXt -lSM -lICE -lXext -lX11" >> $configure
echo "IMLIBS     = -lhvem -lim -lifft  -limod -lrandm -ldtrigs" >> $configure
echo 'GRAPHLIBS    = -ldnmncar $(IMLIBS) $(XLIBS)' >> $configure

# 
# If using plugins, need to tell linker to export symbols
echo 'PLUGLIBS  = -ldl -Wl,-E' >> $configure
echo 'IMODCC    = $(CC)'              >> $configure
echo  'MAKEF77PLUGIN  = $(FC) '"$wrapper"' -shared $(LDFLAGS) -ldtrigs -o'  >> $configure
echo 'FLCC      = $(FC)'              >> $configure
echo "F77LIBS   = $wrapper"                  >> $configure

# 
# tell the C routines to swap the bytes for INTEL
#
echo '#define SWAP_IEEE_FLOATS' >> $hconfigure

echo '#define NO_IMOD_FORK' >> $hconfigure
echo '#define CLIPBOARD_TIMER_HACK 100' >> $hconfigure



set optimization = "-O3 -w"
if ($debug == true) set optimization = "-ggdb -O0"

#
#
#  The fallbacks need to be defined because of problems with n32 code on the
#  SGI; just define them the same as non-fallback versions.
#
echo "CFLAGS  = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "CXXFLAGS = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "FFLAGS  = $flags $optimization $include_flags" >> $configure
echo "NOOPFFLAGS = $flags $optimization -O0 $include_flags" >> $configure

echo "CFALLBACK  = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "FFALLBACK  = $flags $optimization $include_flags" >> $configure
echo 'LDFALLBACK = $(LDFLAGS)'       >> $configure
echo 'NOOPFFALLBACK = $(NOOPFFLAGS)' >> $configure

# Use fortran code for tilt program, make extra fortran libs, skip SGI progs
echo 'TILTOBJS = bpsumnox.o bpsumxtilt.o bpsumlocal.o' >> $configure
echo 'LINUXFLIBS = $(LIBDTRIGS) $(LIBRANDM)' >> $configure
echo 'RGBPROGS = '  >> $configure
#
#   default is to assume tifflib exists
#
set tifflibs = false
if ($tifflibs == default) set tifflibs = true

#
# Set the switch point include file for the FBP algorithm in Tilt
#
set fbpswitch       = fbpswitch-pc.inc

#
# Set up things for Qt include files
#
cat << EOF  >! $midas_qconf
DEFINES	+= _FILE_OFFSET_BITS=64
EOF

cat << EOF >! $imod_qconf
LIBS += -L$lib_dir -limod -liimod -ldiaqt -ltiff
LIBS += -lm
DEFINES	+= _FILE_OFFSET_BITS=64
EOF
