###########################################################################
# SGI running IRIX 6
#
#  $Author$
#
#  $Date$
#
#  $Revision$
#
#  $Log$
#  Revision 3.1  2002/07/19 01:23:56  rickg
#  Changed include directory search path to explicitly use /usr/include/X11/GLw
#  so that GLw include are picked up without preceeding path arguments in the
#  source code.
#
#  Revision 3.0  2001/11/29 18:10:59  rickg
#  *** empty log message ***
#
#  Revision 1.2  2001/11/28 15:41:50  mast
#  Changed instdir to inst_dir
#
#
# 
set glwincdir = /usr/include/X11/GLw
set c_includes =  "-I$glwincdir"

goto $machine
irix6-32:
set flags = "-32 -mips2 $flags"
set fallback = "$flags"
echo "MAKELIB = ld -32 -mips2 -shared -all -o" >> $configure
echo 'LDFLAGS = -32 -mips2 -L$(LIBDIR)  -woff 84'       >> $configure
echo "SHELL     = /sbin/csh"         >> $configure
echo 'LDFALLBACK = $(LDFLAGS)  -woff 84'       >> $configure
set usfftdir = $source_dir/USFFTlib/sgi
goto irix5

irix6:
irix6-n32:

set fallback = "-32 -mips2 $flags"
set flags = "-n32 -mips3 $flags"
echo "MAKELIB = ld -n32 -mips3 -shared -all -o" >> $configure
echo 'LDFLAGS = -n32 -mips3 -L$(LIBDIR) -woff 84'       >> $configure
echo "LDFALLBACK = -32 -mips2 -L$lib_dir  -woff 84"       >> $configure
if ($inst_dir != default) then
	set  inst_lib_dir = $inst_dir/lib32/ 
else
	set  inst_lib_dir = $source_dir/lib32/ 
endif
set lib_dir         = $source_dir/buildlib32/
echo "SHELL     = /sbin/csh"         >> $configure
#
#   default is to assume tifflib for n32, not for old 32
#
if ($tifflibs == default) set tifflibs = true

set usfftdir = $source_dir/USFFTlib/sgi32

goto irix5

###########################################################################
# SGI running IRIX 5.3, or the rest of items for IRIX 6
#
irix5:
if ($compiler == gnu) then
	echo "CC      = gcc"  >> $configure
	echo "FC      = g77" >> $configure
	# DNM 11/10/01: Other flags below need to be fixed for this probably!
else
	echo "CC      = cc"  >> $configure
	echo "FC      = f77" >> $configure
endif

echo "CP      = cp"  >> $configure
echo "FIND    = find" >> $configure

if ($machine == irix5) then
	echo 'LDFLAGS = -L$(LIBDIR) '       >> $configure
endif

if ($shared_libs != false) then
	echo "AR      = ld"                 >> $configure
	echo "ARFLAGS = $flags -shared -all -o"    >> $configure
	echo "LIBEXT  = so"                 >> $configure
else
	echo "AR      = ar"                 >> $configure
	echo "ARFLAGS = clq"                >> $configure
	echo 'MAKELIB = $(AR) $(ARFLAGS)'   >> $configure
	echo "LIBEXT  = a"                  >> $configure
endif
echo "RANLIB    = true"                     >> $configure
echo "MAKELIBSO = ld $flags -shared -all -o"       >> $configure

if ($debug == true) then
#	echo "CLIBS   = -lmalloc_cv -lm -lc" >> $configure
#	echo "CLIBS   = -lfpe -lm -lc"       >> $configure
	echo "CLIBS   = -lm -lc"             >> $configure
else
	echo "CLIBS   = -lm -lc"             >> $configure
endif

echo 'LIBS     = $(CLIBS)'                              >> $configure
echo 'FORTCLIBS = $(CLIBS)'                              >> $configure

echo "XLIBS      = -lXm -lXt -lX11 -lXext -lPW" >> $configure
echo "GLIBS  = -lGLw -lGLU -lGL" >> $configure
#echo "IRISGLIBS    = -lSgm -lgl" >> $configure
echo "IMLIBS     = -lhvem -lim -lifft -limod" >> $configure
echo 'GRAPHLIBS    = -ldnmncar $(IMLIBS) $(XLIBS)' >> $configure

echo 'PLUGLIBS = ' >> $configure
echo 'IMODCC    = $(CC)'  >> $configure
echo  'MAKEF77PLUGIN  = ld $(LDFLAGS) -shared -all -lftn -o'  >> $configure
echo 'FLCC      = $(CC)'  >> $configure
echo 'F77LIBS   = '                  >> $configure
#echo "F77LIBS      = -lF77 -lU77 -lI77 -lisam" >> $configure

set foptimization = $optimization
if ($debug == true) then
	set optimization = "-g -fullwarn -woff 1174,1552,3201"
	set foptimization = "-g -woff 2274"
else
	set optimization = "-O2 -woff 1174,1552"
endif

#set cflags = "$defines $optimization $include_flags $cflags"
#echo "CFLAGS   = $defines $optimization $include_flags" >> $configure

echo "CFLAGS   = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "CXXFLAGS = $flags $optimization $defines $include_flags" >> $configure
echo "FFLAGS   = $flags $foptimization $defines $include_flags" >> $configure
echo "NOOPFFLAGS = $flags $foptimization -O0 $defines $include_flags" >> $configure
echo "CFALLBACK   = $fallback $optimization $defines $include_flags" >> $configure
echo "FFALLBACK   = $fallback $foptimization $defines $include_flags" >> $configure
echo "NOOPFFALLBACK = $fallback $foptimization -O0 $defines $include_flags" >> $configure

# Pick whose floats the fortran code can swap
if ($swap_ieee == true) then
    echo "#define SWAP_IEEE_FLOATS"                 >> $hconfigure
endif

# Build tilt from Fortran subroutines, skip extra libraries, make sgi-specific
echo 'TILTOBJS = bpsumnox.o bpsumxtilt.o bpsumlocal.o' >> $configure
echo 'LINUXFLIBS = ' >> $configure
echo 'RGBPROGS = frommrc tomrc mrcv'  >> $configure

#
# Set the switch point include file for the FBP algorithm in Tilt
#
set fbpswitch       = fbpswitch-sgi.inc
