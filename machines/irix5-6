#!/bin/csh
###########################################################################
# SGI running IRIX 6
#
#  $Author$
#
#  $Date$
#
#  $Revision$
#   Log at end of file
#

# 
#set glwincdir = /usr/include/X11/GLw
set c_includes =  '-I$(QTDIR)/include'

goto $machine
irix6-32:
set flags = "-32 -mips2 $flags"
set fallback = "$flags"
echo "MAKELIB = ld -32 -mips2 -shared -all -o " >> $configure
echo 'LDFLAGS = -32 -mips2 -L$(LIBDIR)  -woff 84'       >> $configure
echo "SHELL     = /sbin/csh"         >> $configure
echo 'LDFALLBACK = $(LDFLAGS)  -woff 84'       >> $configure
set usfftdir = $source_dir/USFFTlib/sgi
set xplax = noplax.o
goto irix5

irix6:
irix6-n32:

set fallback = "-32 -mips2 $flags"
set flags = "-n32 -mips3 $flags"
echo "MAKELIB = ld -n32 -mips3 -shared -all -o " >> $configure
echo 'LDFLAGS = -n32 -mips3 -L$(LIBDIR) -woff 84'       >> $configure
echo "LDFALLBACK = -32 -mips2 -L$lib_dir  -woff 84"       >> $configure
if ($inst_dir != default) then
	set  inst_lib_dir = $inst_dir/lib32/ 
else
	set  inst_lib_dir = $source_dir/lib32/ 
endif
set lib_dir         = $source_dir/buildlib32/
echo "SHELL     = /sbin/csh"         >> $configure
#
#   default is to assume tifflib for n32, not for old 32
#
if ($tifflibs == default) set tifflibs = true

set usfftdir = $source_dir/USFFTlib/sgi32

goto irix5

###########################################################################
# SGI running IRIX 5.3, or the rest of items for IRIX 6
#
irix5:
if ($compiler == gnu) then
	echo "CC      = gcc"  >> $configure
	echo "CXX     = g++"  >> $configure
	echo "FC      = g77" >> $configure
	# DNM 11/10/01: Other flags below need to be fixed for this probably!
else
	echo "CC      = cc"  >> $configure
	echo "CXX     = CC"  >> $configure
	echo "FC      = f77" >> $configure
endif

# Watch out for the tab in the build rule

cat << EOF >> $configure
.SUFFIXES: .cpp
.cpp.o:
	\$(CXX) -c \$(CXXFLAGS) -o \$@ \$<

CP      = cp
FIND    = find
EOF

if ($machine == irix5) then
	echo 'LDFLAGS = -L$(LIBDIR) '       >> $configure
endif

if ($shared_libs != false) then
	echo "AR      = ld"                 >> $configure
	echo "ARFLAGS = $flags -shared -all -o "    >> $configure
	echo "LIBEXT  = so"                 >> $configure
else
	echo "AR      = ar"                 >> $configure
	echo "ARFLAGS = clq "                >> $configure
	echo 'MAKELIB = $(AR) $(ARFLAGS)'   >> $configure
	echo "LIBEXT  = a"                  >> $configure
endif
echo "RANLIB    = true"                     >> $configure
echo "MAKELIBSO = ld $flags -shared -all -o "       >> $configure
echo 'MAKELIBCPP = $(MAKELIB)'              >> $configure

if ($debug == true) then
#	echo "CLIBS   = -lmalloc_cv -lm -lc" >> $configure
#	echo "CLIBS   = -lfpe -lm -lc"       >> $configure
	echo "CLIBS   = -lm -lc"             >> $configure
else
	echo "CLIBS   = -lm -lc"             >> $configure
endif

echo 'LIBS     = $(CLIBS)'                              >> $configure
echo 'FORTCLIBS = $(CLIBS)'                              >> $configure

echo "XLIBS      = -lXm -lXt -lX11 -lXext -lPW" >> $configure
echo "IMLIBS     = -lhvem -lim -lifft -limod" >> $configure

echo 'IMODCC    = $(CC)'  >> $configure
echo  'MAKEF77PLUGIN  = ld $(LDFLAGS) -shared -all -lftn -o'  >> $configure
echo 'FLCC      = $(CC)'  >> $configure
echo 'F77LIBS   = '                  >> $configure
#echo "F77LIBS      = -lF77 -lU77 -lI77 -lisam" >> $configure

set foptimization = $optimization
if ($debug == true) then
	set optimization = "-g -fullwarn -woff 1174,1552,3201"
	set foptimization = "-g -woff 2274"
else
	set optimization = "-O2 -woff 1174,1552"
endif

#set cflags = "$defines $optimization $include_flags $cflags"
#echo "CFLAGS   = $defines $optimization $include_flags" >> $configure

echo "CFLAGS   = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "CXXFLAGS = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "FFLAGS   = $flags $foptimization $defines $include_flags" >> $configure
echo "NOOPFFLAGS = $flags $foptimization -O0 $defines $include_flags" >> $configure
echo "CFALLBACK   = $fallback $optimization $defines $include_flags" >> $configure
echo "FFALLBACK   = $fallback $foptimization $defines $include_flags" >> $configure
echo "NOOPFFALLBACK = $fallback $foptimization -O0 $defines $include_flags" >> $configure

# Pick whose floats the fortran code can swap
if ($swap_ieee == true) then
    echo "#define SWAP_IEEE_FLOATS"                 >> $hconfigure
endif

#
# Use a workaround when window managers won't do StaysOnTop reliably
#
echo '#define STAY_ON_TOP_HACK' >> $hconfigure

#
# Do not use multiple threads in plax programs
#
echo '#define QTPLAX_NO_THREAD' >> $hconfigure

#
# Set this because ordinary geometry saving method makes windows walk up and
# to the left
#
echo '#define SGI_GEOMETRY_HACK' >> $hconfigure


# Build tilt from Fortran subroutines, skip extra libraries, make sgi-specific
echo 'TILTOBJS = bpsumnox.o bpsumxtilt.o bpsumlocal.o' >> $configure
set rgbprogs = "frommrc tomrc mrcv"


#
# Set the switch point include file for the FBP algorithm in Tilt
#
set fbpswitch       = fbpswitch-sgi.inc

#
# Set up things for Qt include files
#
cat << EOF  >! $midas_qconf

EOF

cat << EOF >! $imod_qconf
LIBS += -L$lib_dir -limod -liimod -ldiaqt -ltiff
LIBS += -lm
INCLUDEPATH += .
EOF

#
# Set up to copy qt lib for a distribution, and set name of LD_LIBRARY variable
echo 'QTINSTLIBDIR = qtlib' >> $configure
set ld_lib_var      = LD_LIBRARYN32_PATH


#  $Log$
#  Revision 3.14  2003/10/24 04:18:43  mast
#  changes for WIndows/Intel compilation
#
#  Revision 3.13  2003/09/24 23:06:05  mast
#  reinstate qtplax!
#
#  Revision 3.12  2003/09/24 20:40:48  mast
#  Back off from using Qt plax and go back to X plax routines
#
#  Revision 3.11  2003/09/24 17:31:39  mast
#  Add geometry define
#
#  Revision 3.10  2003/08/29 16:58:24  mast
#  Sepcify no threading for Plax applications
#
#  Revision 3.9  2003/08/25 19:48:16  mast
#  *** empty log message ***
#
#  Revision 3.8  2003/05/08 20:46:04  mast
#  *** empty log message ***
#
#  Revision 3.7  2003/05/08 20:23:27  mast
#  *** empty log message ***
#
#  Revision 3.6  2003/05/08 20:22:32  mast
#  *** empty log message ***
#
#  Revision 3.5  2003/03/28 23:53:41  mast
#  new version of Plax
#
#  Revision 3.4  2003/03/18 19:27:08  mast
#  Add hack definition for keeping window on top
#
#  Revision 3.3  2003/02/10 20:58:00  mast
#  *** empty log message ***
#
#  Revision 3.2.2.9  2003/01/30 05:50:02  mast
#  *** empty log message ***
#
#  Revision 3.2.2.8  2003/01/27 00:38:37  mast
#  fine-tuning the build after pure Qt imod
#
#  Revision 3.2.2.7  2002/12/06 22:04:56  mast
#  *** empty log message ***
#
#  Revision 3.2.2.6  2002/12/06 17:16:41  mast
#  *** empty log message ***
#
#  Revision 3.2.2.5  2002/12/06 05:18:42  mast
#  *** empty log message ***
#
#  Revision 3.2.2.4  2002/12/05 19:48:32  mast
#  *** empty log message ***
#
#  Revision 3.2.2.3  2002/12/05 19:04:19  mast
#  *** empty log message ***
#
#  Revision 3.2.2.2  2002/12/05 18:57:00  mast
#  *** empty log message ***
#
#  Revision 3.2.2.1  2002/12/05 18:10:18  mast
#  *** empty log message ***
#
#  Revision 3.2  2002/07/26 19:15:27  mast
#  *** empty log message ***
#
#  Revision 3.1  2002/07/19 01:23:56  rickg
#  Changed include directory search path to explicitly use /usr/include/X11/GLw
#  so that GLw include are picked up without preceeding path arguments in the
#  source code.
#
#  Revision 3.0  2001/11/29 18:10:59  rickg
#  *** empty log message ***
#
#  Revision 1.2  2001/11/28 15:41:50  mast
#  Changed instdir to inst_dir
#
