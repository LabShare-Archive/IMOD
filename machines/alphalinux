#############################################################################
# Alpha running SuSE Linux 7.1 axp
# added by HmK 30/07/2001
alphalinux:

#  Use OpenMotif 2.1.30 / Lesstif
#  Separate pointers are needed for X and Motif includes
#

set Xincdir = /usr/X11R6/include/X11
set Mincdir = /usr/X11R6/include

set Xlibdir = /usr/X11R6/lib

set opengl_inc = /usr/include/GL
set opengl_lib = /usr/lib

# add -I$opengl_inc if it's not on the system include path
set c_includes =  "-I$Xincdir -I$Mincdir"

# add -I$opengl_lib if it's not on the system library path
echo 'LDFLAGS = -L$(LIBDIR)' "-L$Xlibdir" >> $configure

#### !!!! has sto be changed
set glwincdir = /usr/include/GL
set glwlibdir = /usr/lib
set glwlibname = MesaGLwM

echo "SHELL     = /bin/csh"         >> $configure
echo "CC        = gcc"              >> $configure
echo "FC        = f77"              >> $configure
echo 'CP        = \\cp'              >> $configure
echo 'FIND      = \\find'            >> $configure

if ($shared_libs != false) then
	echo "AR      = ld"                 >> $configure
	echo "ARFLAGS = $flags -shared -o"  >> $configure
	echo "RANLIB    = true"             >> $configure
	echo "LIBEXT  = so"                 >> $configure
else
	echo "AR      = ar"                 >> $configure
	echo "ARFLAGS = ruv"                >> $configure
	echo "RANLIB    = ranlib"           >> $configure
	echo "LIBEXT  = a"                  >> $configure
endif

echo 'MAKELIB   = $(AR) $(ARFLAGS)' >> $configure
echo "MAKELIBSO = ld $flags -shared -o" >> $configure

echo "CLIBS   = -lc -lm" >> $configure
echo 'LIBS    = $(CLIBS)'  >> $configure
echo 'FORTCLIBS = $(CLIBS)'  >> $configure
echo "XLIBS   = -lXm -lXt -lSM -lICE -lXext -lX11" >> $configure
echo "GLIBS = -l$glwlibname -lGL -lGLU  " >> $configure

echo "IMLIBS     = -lhvem -lim -lifft  -limod -lrandm -ldtrigs" >> $configure
echo 'GRAPHLIBS    = -ldnmncar $(IMLIBS) $(XLIBS)' >> $configure

# 
# If using plugins, need to tell linker to export symbols
echo 'PLUGLIBS  = -ldl -Wl,-E' >> $configure
echo 'IMODCC    = $(CC)'              >> $configure
echo  'MAKEF77PLUGIN  = $(FC) -shared $(LDFLAGS) -ldtrigs -o'  >> $configure
echo 'FLCC      = $(FC)'              >> $configure
echo 'F77LIBS   = '                  >> $configure

# 
# tell the Fortran and C routines to swap the bytes for ALPHA
#
\cp $endian_dir/little_endian.inc $endian_dir/endian.inc
echo '#ifndef LITTLE_ENDIAN' >> $hconfigure
echo '#define LITTLE_ENDIAN' >> $hconfigure
echo '#endif' >> $hconfigure
echo '#define SWAP_IEEE_FLOATS' >> $hconfigure


#
# tell the C routines being called by Fortran that they need two __
#
echo '#define G77__HACK' >> $hconfigure
#
# tell imod that hacks are needed for contour fill by tesselation
#
echo '#define TESS_HACK'  >> $hconfigure

set optimization = "-O3 -w"
if ($debug == true) then
        set optimization = "-ggdb -O0"
endif

#
#
#  The fallbacks need to be defined because of problems with n32 code on the
#  SGI; just define them the same as non-fallback versions.
#
echo "CFLAGS  = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "CXXFLAGS = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "FFLAGS  = $flags $optimization $include_flags" >> $configure
echo "NOOPFFLAGS = $flags $optimization -O0 $include_flags" >> $configure

echo "CFALLBACK  = $flags $optimization $defines $include_flags $c_includes" >> $configure
echo "FFALLBACK  = $flags $optimization $include_flags" >> $configure
echo 'LDFALLBACK = $(LDFLAGS)'       >> $configure
echo 'NOOPFFALLBACK = $(NOOPFFLAGS)' >> $configure

# Build tilt from Fortran subroutines, skip Linux libs and SGI programs
echo 'TILTOBJS = bpsumnox.o bpsumxtilt.o bpsumlocal.o' >> $configure
echo 'LINUXFLIBS = ' >> $configure
echo 'RGBPROGS = '  >> $configure

set usfftdir = $source_dir/USFFTlib/alpha
