Building a kernel with BIGMEMORY capability on Red Hat 7.0

Chuck Robertson

February 21, 2001


The default configuration shipped by Red Hat for its workstation bundle of
software supports 1GB of physical memory.  In practical terms, only 800 MB of
this memory can be effectively used.

This sort of artifical limitation has been one of the key motivators behind
the feature set put into the newest version of the Linux kernel, 2.4.x.
This new kernel is now in testing by all of the large distribution vendors.

However, in the mean time, if you have a 2.2.16+ version of the Linux kernel,
you are likely to need to build a special version to make use of physical
memory beyond 800MB.

This task is not as daunting as it seems, as long as you stick literally and
carefully to every step of the following recipe.  All of the following must
be performed as ROOT, and it should be done BEFORE you actually install RAM
which will take your total over 1GB.  If you install the memory with the
standard kernel, you risk serious system instability, random crashes, and
failure to build this new kernel, (you may end up reinstalling the OS.)
See step 16 for more information as well as a way around this if you really
must install the new RAM before you complete this process.

This recipe has only been tested on the workstation distribution "shrink wrap"
product from Red Hat 7.0.



1.  Make sure that you have installed the source for your current Linux kernel
    on the system you are about to build on.
    In Red Hat 7.0 you can do this via GnoRPM, (paw->Programs->System->GnoRPM).
    Check under Development/System... you should have:
    kernel headers 2.4.0-0.26
    kernel source  2.2.16-22

    Yes... Red Hat has mixed the headers from 2.4 with the kernel of 2.2 to 
    allow their 7.0 release to be easier to upgrade to 2.4 when it is finally 
    released.

2.  cd /usr/src/linux
3.  make mrproper
4.  make distclean
5.  make oldconfig
6.  make xconfig
     [This assumes you are running X windows... if not use "make menuconfig"]

    click "General Setup"
    on the "General Seup" form, set "BIGMEM support" to "y"

    click "Main Menu" on the "General Setup" form.
    click "Save and Exit" on the main menu.

    Do not change any other configurations unless you really, really know
    what you are doing.  This recipe preserves all of the other "goodies"
    that Red Hat provides... USB, device drivers, Gnome, NFS, etc, etc.
7.  While still in the /usr/src/linux directory, edit the Makefile.
    Change the line that says:

        EXTRAVERSION = -22

    to:

        EXTRAVERSION = -22LM

    Where the LM will stand for "Large Memory".  This is a critical step... you
    must indicate to the system that you are building a new version of the
    kernel that must be segregated from the current version.

8.  make dep
9.  make bzImage
10. cp System.map  /boot/System.map-2.2.16LM
11. cp arch/i386/boot/bzImage  /boot/vmlinuz-2.2.16-22LM
12. make modules
13. make modules_install
14. Edit the file /etc/lilo.conf.
    Add a section to the end of the file which looks like:

    image=/boot/vmlinuz-2.2.16-22LM
      label=linuxlm
      read-only
      root=/dev/hdaX

    Where the X at the end of hda is the partition from which you will boot.
    The easy way to know this is to use whatever value of X is in the
    lilo.conf file in the section which controls the CURRENT boot process... so
    just raise your eyes a few lines to see where the current boot
    partition is currently located.

    Note, the section you have added works fine for systems which boot from
    IDE (ATA) drives.  If you are booting from SCSI devices you will likely 
    need a couple of extra statements... just CLONE them from the example
    already present in the lilo.conf file for the kernel you are currently 
    running.
15. If you want this new kernel to be the one that you boot into by default,
    edit the line in /etc/lilo.conf near the top of the file:

    default=linux


    change to:


    default=linuxlm


16. If you want to use your standard memory kernel while you have more than
    1GB of physical memory installed in the system, you are advised to add a 
    line to the standard kernel section after the root=/dev/hdaX as follows:

     root=/dev/hdaX
       append="mem=800M"

    This will keep the small memory kernel from becoming unstable.  If you do
    not make this change, you are encouraged NOT to boot into the small memory
    kernel with more than 1GB of physical memory installed in your
    machine... the machine will become unstable and the results will be
    unpredictable, (random crashes are likely.)
17. cd /boot
18. Delete the file boot.0306 if it is present, (rm boot.0306).
19. /sbin/lilo -v
20. Power the system down and install the new memory.
21. Reboot the system and select linuxlm at the prompt, (if you did not make
    linuxlm the default.)

    All done.


