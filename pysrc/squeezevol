#!/usr/bin/env python
# Squeezevol - run matchvol to squeeze or expand a volume
#
# Authors: Tor Mohling and David Mastronarde
#
# $Id$
# Log at end

progname = 'squeezevol'
prefix = 'ERROR: ' + progname + ' - '

# load System Libraries
import os, sys

#
# Setup runtime environment
if os.getenv('IMOD_DIR') != None:
   sys.path.insert(0, os.path.join(os.environ['IMOD_DIR'], 'pylib'))
   from imodpy import *
   addIMODbinIgnoreSIGHUP()
else:
   sys.stdout.write(prefix + " IMOD_DIR is not defined!\n")
   sys.exit(1)

#
# load IMOD Libraries
from pip import *

# Initializations
factor = 1.6
ix,iy,iz,ox,oy,oz,xs,ys,zs = 0,0,0,0,0,0,0,0,0
squeezex,squeezey,squeezez = 0,0,0
pixelx,pixely,pixelz = 0,0,0
linear = ""
pixelxyz = [1.0, 1.0, 1.0]
tempdir = ""
InputFile = ""
OutputFile = ""

# Fallbacks from ../manpages/autodoc2man 3 1 squeezevol
options = ["f:factor:F:", "e:expand:F:", "x:xFactor:F:", "y:yFactor:F:", "z:zFactor:F:",
           "ix:ixSize:I:", "iy:iySize:I:", "iz:izSize:I:", "t:tempdir:FN:",
           "l:linear:B:", ":PID:B:"]

#
# Process command-line using PIP
(opts, nonopts) = PipReadOrParseOptions(sys.argv, options, progname, 2, 1, 1)
if nonopts != 2:
   prnstr(prefix + "wrong number of arguments")
   PipPrintHelp(progname, 0, 1, 1)
   sys.exit(1)

doPID = PipGetBoolean('PID', 0)
printPID(doPID)

InputFile = PipGetNonOptionArg(0)
OutputFile = PipGetNonOptionArg(1)
if not os.path.exists(InputFile):
   exitError("input file " + InputFile + " does not exist")

t = PipGetString('tempdir', '')
if t != None and t != '':
   tempdir = "TemporaryDirectory " + t
if PipGetBoolean('linear', 0) == 1:
   linear = "InterpolationOrder 1"
factor = PipGetFloat('factor', factor)
ifFactor = 1 - PipGetErrNo()
expand = PipGetFloat('expand', 0.)
if expand and ifFactor:
   exitError("You can enter either -factor or -expand but not both")
if expand:
   factor = 1. / expand
xs = PipGetFloat('xFactor', factor)
ys = PipGetFloat('yFactor', factor)
zs = PipGetFloat('zFactor', factor)

#
try:
   (tx,ty,tz,mode,pixelxyz[0],pixelxyz[1],pixelxyz[2],origx,origy,origz,dmin,
    dmax,dmean) = getmrc(InputFile, True)
   ix = PipGetInteger('ixSize', tx)
   iy = PipGetInteger('iySize', ty)
   iz = PipGetInteger('izSize', tz)
   PipDone()
   #
   ox = 2 * int(ix * (0.5 / xs))
   oy = int(iy / ys)
   oz = 2 * int(iz * (0.5 / zs))
   squeezex = 1 / xs
   squeezey = 1 / ys
   squeezez = 1 / zs
   pixelx = round((xs * pixelxyz[0]), 3)
   pixely = round((ys * pixelxyz[1]), 3)
   pixelz = round((zs * pixelxyz[2]), 3)
   origx += 0.5 * (ox * xs - tx) * pixelxyz[0]
   origy += 0.5 * (oy * ys - ty) * pixelxyz[1]
   origz += 0.5 * (oz * zs - tz) * pixelxyz[2]
   #
   prnstr("Squeezing the volume with Matchvol...")
   matchin =  ["InputFile " + InputFile,
               "OutputFile " + OutputFile,
               tempdir,
               linear,
               fmtstr("OutputSizeXYZ {} {} {}", ox,oy,oz),
               fmtstr("3DTransform {} 0 0 0 0 {} 0 0 0 0 {} 0", 
                      squeezex,squeezey,squeezez)]
   matchout = runcmd("matchvol -StandardInput", matchin, 'stdout')
   #
   prnstr(fmtstr("Adjusting pixel spacing in header to {} {} {}", pixelx,pixely,pixelz))
   alterin = [OutputFile, 
              "del",
              fmtstr("{} {} {}", pixelx,pixely,pixelz),
              "org",
              fmtstr("{} {} {}", origx,origy,origz),
              "done"]
   runcmd("alterheader", alterin)
   sys.exit(0)

except ImodpyError:
   exitFromImodError(progname)

#
# $Log$
#
