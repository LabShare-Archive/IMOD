#!/usr/bin/env python
# program to run imodwincpu on Windows; elsewhere run "uptime" and
# compute sum of %cpu outputs from ps
#
# Author: David Mastronarde
#
# $Id$

# load System Libraries
import os, sys, os.path

#
# Setup runtime environment
if sys.platform.find("win32") < 0:
   try:
      signal.signal(signal.SIGHUP, signal.SIG_IGN)
   except:
      pass
if os.getenv('IMOD_DIR') != None:
   os.environ['PATH'] = os.path.join(os.environ['IMOD_DIR'], 'bin') + \
                        os.pathsep + os.environ['PATH']
   sys.path.insert(0, os.path.join(os.environ['IMOD_DIR'], 'pylib'))
else:
   sys.stdout.write("ERROR: imodcpuload - IMOD_DIR is not defined!\n")
   sys.exit(1)

#
# load IMOD Libraries
from imodpy import *

try:
   if sys.platform == 'win32' or sys.platform == 'cygwin':
      runcmd('imodwincpu', None, 'stdout')

   else:
      runcmd('uptime', None, 'stdout')
      psout = runcmd('ps -eo %cpu')
      sum = 0.
      if len(psout) > 1:
         for i in range(1, len(psout)):
            sum += float(psout[i].rstrip('\r\n'))
      prnstr(fmtstr('Total CPU usage: {:.2f}', sum / 100.))

except ImodpyError:
   exitFromImodError('imodcpuload')
            
sys.exit(0)
