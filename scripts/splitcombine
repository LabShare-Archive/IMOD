#! /bin/csh -f
# splitcombine: chops up volcombine.com to run on multiple machines
#  $Author$
#
#  $Date$
#
#  $Revision$
#
#  $Log$

set pn = splitcombine

set tmpdir = /usr/tmp
if ($?IMOD_DIR) then
    if (-e $IMOD_DIR/bin/settmpdir) source $IMOD_DIR/bin/settmpdir
endif

set comname = volcombine.com
if ($#argv > 0) then
    if ("$argv[1]" == "-h") then
        cat <<EOF
Usage: splitcombine [command_file] [temporary_directory]
  Generates command files for running volcombine operation on multiple machines
  First optional argument is name of command file (default volcombine.com)
  Second optional argument is temporary directory to use (default $tmpdir)
EOF
        exit 0
    endif

    set comname = $argv[1]
endif

if ($#argv > 1) then
    set tmpdir = $argv[2]
endif

set tmpdir = `echo $tmpdir | sed '/\//s//\\\//g'`

set tmprec = $tmpdir\\/rec.
set tmpmat = $tmpdir\\/mat.

set rootname = $comname:r
set comname = $rootname.com

if (! -e $comname) then
    echo "ERROR: $pn - Command file $comname does not exist"
    exit 1
endif

# Figure out how many pieces
#
set numpieces = `sed -n '/^.*COMBINING PIECE *1 *of /s///p' $comname`
@ numpieces = $numpieces

set optionline = `grep 'set *combinefft_options' $comname`

set usingtmp = `grep '\/usr\/tmp' $comname`
if ("$usingtmp" != "") then
    echo "WARNING: This command file accesses /usr/tmp and will not "
    echo "run on multiple machines"
else
    set usingtmp = `grep '\/tmp' $comname`
    if ("$usingtmp" != "") then
        echo "WARNING: This command file accesses /tmp and may not "
        echo "run on multiple machines"
    endif
endif

# Set up to replace localscratch with scratch/host
#
set thishost = `hostname`
set hostroot = $thishost:r:r:r

awk "/^# THIS FILE/, /COMBINING PIECE *1/" $comname | \
 sed '/COMBINING PIECE/d' >! $rootname-start.com

@ num = 0
while ($num < $numpieces)
    @ num++
    set numtext = $num
    if ($num < 10) then
        set numtext = 00"$numtext"
    else if ($num < 100) then
        set numtext = 0"$numtext"
    endif
    set thiscom = $rootname-$numtext.com
    cat <<EOF >! $thiscom
\$set tmpext = \`hostname\`.\$\$
EOF
    if ("$optionline" != "") echo $optionline >> $thiscom
    @ nextnum = $num + 1
    set tmpname = $rootname.tmp.$$
    if ($num < $numpieces) then
        awk "/COMBINING PIECE *$num /, /COMBINING PIECE *$nextnum /" $comname >! $tmpname
    else
        awk "/COMBINING PIECE *$num /, /REASSEMBLING PIECES/" $comname >! $tmpname
    endif
    sed -e '/STATUS:/d' \
        -e "/localscratch/s//scratch\/$hostroot/g" \
        -e '/rec\.st/s//rec.st.\$tmpext/g' \
        -e '/mat\.st/s//mat.st.\$tmpext/g' \
        -e '/rec\.fft/s//rec.fft.\$tmpext/g' \
        -e '/mat\.fft/s//mat.fft.\$tmpext/g' \
        -e "/rec\./s//$tmprec/g" \
        -e "/mat\./s//$tmpmat/g" < $tmpname >> $thiscom
    \rm -r $tmpname
    cat <<EOF >> $thiscom
\$echo CHUNK DONE
EOF
end

awk '/REASSEMBLING PIECES/, /if \(-e/' $comname >! $rootname-finish.com
cat <<EOF >> $rootname-finish.com
\$\\rm -f $rootname-[0-9]*.*
EOF
@ nextnum++
echo "$nextnum command files created and ready to run with:"
echo "  processchunks machine_list $rootname"



     
