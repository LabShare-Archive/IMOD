#!/bin/csh -f
# collectmmm - to collect min, max, mean and pixel # values from a set of
# log files and set the min/max/mean in an image file header
#
#  $Id$
#
#  $Log$
#  Revision 3.3  2007/07/15 20:58:46  mast
#  Added option for starting number
#
#  Revision 3.2  2006/08/17 18:36:54  mast
#  Added locale statement to keep output of awk from having instead of .
#
#  Revision 3.1  2006/03/24 23:10:04  mast
#  *** empty log message ***
#

if ($#argv < 4) then
    cat <<EOF
Usage: collectmmm tag rootname #_of_logs image_file [starting_#]
       tag  =  a unique text string prefix to the min, max, mean, and pixel #
       rootname = root name of numbered log files, rootname-nnn.log
       #_of_logs = number of log files
       image_file = image file to correct the header of 
       starting_# = option entry of number of first file, default is 1
EOF
    exit 1
endif

setenv LC_NUMERIC C

set tag = $argv[1]
set root = $argv[2]
@ numlogs = $argv[3]
set imfile = $argv[4]
@ startnum = 1
if ($#argv > 4) then
    @ startnum = $argv[5]
endif

@ num = 0

while ($num < $numlogs)
    @ num++
    @ numrec = $num + $startnum - 1
    set numtext = `echo $numrec | awk '{printf "%03d\n", $1}'`
    set thislog = $root-$numtext.log

    # Get the line from the file, insist it has four numbers
    #
    set logmmm = `sed -n "/.*$tag/s///p" $thislog | sed '/[[:cntrl:]]/s///g'`
    if ($#logmmm != 4) then
        echo "ERROR: collectmmm - $thislog does not contain 4 values: $logmmm"
        exit 1
    endif

    # First time, initialize min, max, sum and pixel sum
    #
    if ($num == 1) then
        set allmin = $logmmm[1]
        set allmax = $logmmm[2]
        set allsum = `echo $logmmm[3] $logmmm[4] | awk '{print $1 * $2}'`
        set pixsum = $logmmm[4]
    else

        # Then compute new min etc with clumsy awks
        #
        set allmin = `echo $allmin $logmmm[1] | awk '{if ( $1 < $2 ) print $1} {if ( $1 >= $2 ) print $2}'`
        set allmax = `echo $allmax $logmmm[2] | awk '{if ( $1 > $2 ) print $1} {if ( $1 <= $2 ) print $2}'`
        set allsum = `echo $allsum $logmmm[3] $logmmm[4] | awk '{print $1 + $2 * $3}'`
        set pixsum = `echo $pixsum $logmmm[4] | awk '{print $1 + $2}'`
    endif
end

# Compute final mean, set into header, exit with error if any problem
#
set mean = `echo $allsum $pixsum | awk '{print $1 / $2}'`
alterheader <<EOF
$imfile
setmmm
$allmin,$allmax,$mean
done
EOF
if ($status) then
    echo "ERROR: collectmmm - setting min, max, mean in Alterheader"
    exit 1
endif
exit 0
