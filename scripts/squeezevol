#! /bin/csh -f

#  $Author$
#
#  $Date$
#
#  $Revision$
#
#  $Log$
#  Revision 3.6  2005/05/11 19:44:51  mast
#  Eliminated tail -1 to get progress output.
#
#  Revision 3.5  2004/12/02 18:17:53  mast
#  Standardized error messages
#
#  Revision 3.4  2004/08/27 05:46:48  mast
#  Switched to using head -n and tail -n
#
#  Revision 3.3  2004/06/29 03:49:52  mast
#  Added nohup, fixed path-setting
#
#  Revision 3.2  2004/01/15 23:33:37  mast
#  Switched to using PIP input to matchvol, added linear interpolation
#  option, and made it adjust pixel size
#
#  Revision 3.1  2002/08/21 15:08:07  mast
#  Suppressed confusing output from matchvol
#

nohup
set pn = "squeezevol"
set factor = 1.6
set tempdir = ""
set linear = ""

if ($#argv == 0)then
  echo "Usage: $pn [options] input_file output_file"
  echo '  Reduces a volume (increases pixel size) in all dimensions using Matchvol'
  echo '  Optional arguments:'
  echo "    -f factor  :  global factor to squeeze by, default = $factor"
  echo "    -x x_factor:  factor to squeeze in X dimension, default is global factor"
  echo "    -y y_factor:  factor to squeeze in Y dimension, default is global factor"
  echo "    -z z_factor:  factor to squeeze in Z dimension, default is global factor"
  echo "    -ix x_size :  input size in X dimension, default is full X size of volume"
  echo "    -iy y_size :  input size in Y dimension, default is full Y size of volume"
  echo "    -iz z_size :  input size in Z dimension, default is full Z size of volume"
  echo "    -l         :  use linear interpolation; default is quadratic"  
  echo "    -P         :  Output process ID"
  exit 0
endif

if ($?IMOD_DIR) then
    set path = ($IMOD_DIR/bin $path)
endif

while ($#argv > 2)
  switch ($argv[1])
    case -ix:
      set ix = $argv[2]
      shift; shift
      breaksw
    case -iy:
      set iy = $argv[2]
      shift; shift
      breaksw
    case -iz:
      set iz = $argv[2]
      shift; shift
      breaksw
    case -x*:
      set xs = $argv[2]
      shift; shift
      breaksw
    case -y*:
      set ys = $argv[2]
      shift; shift
      breaksw
    case -z*:
      set zs = $argv[2]
      shift; shift
      breaksw
    case -f*:
      set factor = $argv[2]
      shift; shift
      breaksw
    case -l*:
      set linear = "InterpolationOrder 1"
      shift
      breaksw
    case -t*:
      set tempdir = "TemporaryDirectory $argv[2]"
      shift; shift
      breaksw
    case -P:
      echo2 Shell PID: $$
      shift
      breaksw
    default:
      echo "ERROR: ${pn} - bad argument $argv[1]"
      exit 1
  endsw
end
if (! -e $argv[1])then
  echo "ERROR: ${pn} - input file $argv[1] does not exist"
  exit 1
endif

if (! ${?xs}) set xs = $factor
if (! ${?ys}) set ys = $factor
if (! ${?zs}) set zs = $factor

set nxyz =  `header $argv[1] | sed -n '/rows, sections/p'| awk '{print $7, $8, $9}'`
if (! ${?ix}) set ix = $nxyz[1]
if (! ${?iy}) set iy = $nxyz[2]
if (! ${?iz}) set iz = $nxyz[3]
set pixelxyz =  `header $argv[1] | sed -n '/Pixel spacing/p'| awk '{print $4, $5, $6}'`

if ($#pixelxyz < 3) set pixelxyz = (1. 1. 1.)

set ox = `echo $ix $xs | awk '{print 2 * int($1 * 0.5 / $2) }'`
set oy = `echo $iy $ys | awk '{print int($1 / $2) }'`
set oz = `echo $iz $zs | awk '{print 2 * int($1 * 0.5 / $2) }'`

set squeezex = `echo $xs | awk '{print 1. / $1}'`
set squeezey = `echo $ys | awk '{print 1. / $1}'`
set squeezez = `echo $zs | awk '{print 1. / $1}'`

set pixelx = `echo $xs $pixelxyz[1] | awk '{printf "%.3f", $1 * $2}'`
set pixely = `echo $ys $pixelxyz[2] | awk '{printf "%.3f", $1 * $2}'`
set pixelz = `echo $zs $pixelxyz[3] | awk '{printf "%.3f", $1 * $2}'`

echo "Squeezing the volume with matchvol..."

matchvol -StandardInput <<HERESTRING
InputFile $argv[1]
OutputFile $argv[2]
$tempdir
$linear
OutputSizeXYZ $ox $oy $oz
3DTransform $squeezex 0 0 0 0 $squeezey 0 0 0 0 $squeezez 0
HERESTRING

if ($status) then
    echo "ERROR: $pn - Error transforming volume"
    exit 1
endif

echo "Adjusting pixel spacing in header to $pixelx $pixely $pixelz"
echo " "
alterheader <<EOF > /dev/null
$argv[2]
del
$pixelx $pixely $pixelz
done
EOF

if ($status) then
    echo "ERROR: $pn - running alterheader"
    exit 1
endif

