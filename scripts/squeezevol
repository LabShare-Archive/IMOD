#! /bin/csh -f

set pn = "squeezevol"
set factor = 1.6
set tempdir = ""

if ($#argv == 0)then
  echo "Usage: $pn [options] input_file output_file"
  echo '  Reduces a volume (increases pixel size) in all dimensions using Matchvol'
  echo '  Optional arguments:'
  echo "    -f factor  :  global factor to squeeze by, default = $factor"
  echo "    -x x_factor:  factor to squeeze in X dimension, default is global factor"
  echo "    -y y_factor:  factor to squeeze in Y dimension, default is global factor"
  echo "    -z z_factor:  factor to squeeze in Z dimension, default is global factor"
  echo "    -ix x_size :  input size in X dimension, default is full X size of volume"
  echo "    -iy y_size :  input size in Y dimension, default is full Y size of volume"
  echo "    -iz z_size :  input size in Z dimension, default is full Z size of volume"
  echo "    -t tempdir :  path name of directory for temporary files"  
  exit 0
endif

if ($?IMOD_DIR) set path = ($IMOD_DIR/bin $path)

while ($#argv > 2)
  switch ($argv[1])
    case -ix:
      set ix = $argv[2]
      shift; shift
      breaksw
    case -iy:
      set iy = $argv[2]
      shift; shift
      breaksw
    case -iz:
      set iz = $argv[2]
      shift; shift
      breaksw
    case -x*:
      set xs = $argv[2]
      shift; shift
      breaksw
    case -y*:
      set ys = $argv[2]
      shift; shift
      breaksw
    case -z*:
      set zs = $argv[2]
      shift; shift
      breaksw
    case -f*:
      set factor = $argv[2]
      shift; shift
      breaksw
    case -t*:
      set tempdir = $argv[2]
      shift; shift
      breaksw
    default:
      echo "${pn}: bad argument $argv[1]"
      exit 1
  endsw
end
if (! -e $argv[1])then
  echo "${pn}: input file $argv[1] does not exist"
  exit 1
endif

if (! ${?xs}) set xs = $factor
if (! ${?ys}) set ys = $factor
if (! ${?zs}) set zs = $factor

set nxyz =  `header $argv[1] | sed -n '/rows, sections/p'| awk '{print $7, $8, $9}'`
if (! ${?ix}) set ix = $nxyz[1]
if (! ${?iy}) set iy = $nxyz[2]
if (! ${?iz}) set iz = $nxyz[3]

set ox = `echo $ix $xs | awk '{print 2 * int($1 * 0.5 / $2) }'`
set oy = `echo $iy $ys | awk '{print int($1 / $2) }'`
set oz = `echo $iz $zs | awk '{print 2 * int($1 * 0.5 / $2) }'`

set squeezex = `echo $xs | awk '{print 1. / $1}'`
set squeezey = `echo $ys | awk '{print 1. / $1}'`
set squeezez = `echo $zs | awk '{print 1. / $1}'`

matchvol <<HERESTRING
$argv[1]
$argv[2]
$tempdir
$ox $oy $oz
1

$squeezex 0 0 0
0 $squeezey 0 0
0 0 $squeezez 0

HERESTRING
