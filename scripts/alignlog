#! /bin/csh -f
# To extract portions of a tiltalign log file
#
#  $Author$
#
#  $Date$
#
#  $Revision$
#
#  $Log$
#
set pn = alignlog
if ($#argv == 0) then
cat <<EOF
Usage: $pn <options> [a | b | log_filename]
   Extracts data from a Tiltalign log file: from the given log_filename, from
         aligna.log or alignb.log if the last argument is a or b, otherwise
         from align.log if neither a filename, a or b is entered
   Options may be one or more of the following:
         -m   Mappings: print variable mappings
         -e   Errors: print errors and ratio of measured to unknowns
         -s   Solution: print the alignment solution for each view
         -c   Coordinates: print the 3-D coordinates of the fiducials
         -r   Residuals: print large residuals
         -a   Angles: print planar fits and recommended change in angles
EOF
exit 0
endif

set file = $argv[$#argv]
@ numarg = 1
if (! -r $file) then
    if ("$file" == 'a') then
	set file = aligna.log
    else if ("$file" == 'b') then
	set file = alignb.log
    else
        set file = align.log
	@ numarg = 0
    endif
    if (! -r $file) then
	echo "No file name specified, and align.log does not exist"
        exit 1
    endif
endif

set output = 0

grep "SURFACE ANALYSIS" $file > /dev/null
set newsurface = $status

while ($#argv > $numarg)
    switch ($argv[1])
	case -m*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ *Variable mappings/, /^ Criterion/' $file | sed '/Criterion/d'
	    set output = 1
	    shift
	breaksw

	case -e*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ *Final   F/, /^  Ratio/' $file
	    grep 'Residual error' $file
	    set output = 1
	    shift
	breaksw

	case -s*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ view   rotation/, /^ *3-D point/' $file | sed '/3-D/d'
	    set output = 1
	    shift
	breaksw

	case -c*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ *3-D point/, /^ Midpoint/' $file | sed '/Midpoint/d'
	    set output = 1
	    shift
	breaksw

	case -r*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    if ($newsurface == 1) then
		awk '/^ *Projection points/, /^ Fit to all/' $file | sed '/Fit t/d'
	    else
		awk '/^ *Projection points/, /^ SURFACE ANALYSIS/' $file | sed '/SURFACE/d'
	    endif
	    set output = 1
	    shift
	breaksw

	case -a*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    if ($newsurface == 1) then
		awk '/^ Fit to all/, /^ 1 to do/' $file | sed '/1 to do/d'
	    else
		awk '/^ SURFACE ANALYSIS/, /^ 1 to do/' $file | sed '/1 to do/d'
	    endif
	    set output = 1
	    shift
	    breaksw

	default:
	    echo "Unknown option $argv[1]"
	    exit 1

    endsw
end
