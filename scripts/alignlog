#! /bin/csh -f
# To extract portions of a tiltalign log file
#
#  $Id$
#  Log at end
#
#
set pn = alignlog
if ($#argv == 0) then
cat <<EOF
Usage: $pn <options> [a | b | log_filename]
   Extracts data from a Tiltalign log file: from the given log_filename, from
         aligna.log or alignb.log if the last argument is a or b, otherwise
         from align.log if neither a filename, a or b is entered
   Options may be one or more of the following:
         -m   Mappings: print variable mappings
         -e   Errors: print errors and ratio of measured to unknowns
         -s   Solution: print the alignment solution for each view
         -l   Local: print local area sizes, # of fiducials, and errors
         -c   Coordinates: print the 3-D coordinates of the fiducials
         -r   Residuals: print large residuals
         -a   Angles: print planar fits and recommended change in angles
         -b   Beam tilt: print F values from beam tilt search
EOF
exit 0
endif

set file = $argv[$#argv]
@ numarg = 1
if (! -r $file) then
    if ("$file" == 'a') then
	set file = aligna.log
    else if ("$file" == 'b') then
	set file = alignb.log
    else
        set file = align.log
	@ numarg = 0
    endif
    if (! -r $file) then
	echo "No file name specified, and align.log does not exist"
        exit 1
    endif
endif

set output = 0

grep "SURFACE ANALYSIS" $file > /dev/null
set newsurface = $status
grep "to do series" $file > /dev/null
set pipinput = $status
grep "Ratio .*to total unknown" $file > /dev/null
set newratios = $status
grep "Ratio .*formerly" $file > /dev/null
set oneratio = $status
grep "olved beam tilt" $file > /dev/null
set nobeamtilt = $status
grep "ntries to program" $file > /dev/null
set noprogentry = $status
grep "Doing local area" $file > /dev/null
set nolocals = $status

while ($#argv > $numarg)
    switch ($argv[1])
	case -m*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ *Variable mappings/, /^$/' $file
	    set output = 1
	    shift
	breaksw

	case -e*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
            if (! $newratios) then
                awk '/^ *Final   F/, /^  Ratio/' $file
            else if ($oneratio) then
                awk '/^.*Final   F/, /^  Ratio of/' $file
            else
                awk '/^.*Final   F/, /^  Ratio to/' $file
            endif
	    grep 'Residual error' $file
	    set output = 1
	    shift
	breaksw

	case -s*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
            if ($nobeamtilt == 0) then
                grep 'Beam tilt angle is' $file
                echo ' '
            endif
	    awk '/^ view.*deltilt/, /^$/' $file
	    set output = 1
	    shift
	breaksw

	case -l*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
            sed -n -e '/Doing local area/p' -e '/on bottom and/p' \
                   -e '/Residual error/p' $file
	    set output = 1
	    shift
	breaksw

	case -c*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ *3-D point/, /^ Midpoint/' $file | sed '/Midpoint/d'
	    set output = 1
	    shift
	breaksw

	case -r*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    awk '/^ *Projection points/, /^$/' $file
	    set output = 1
	    shift
	breaksw

	case -a*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
	    if ($newsurface == 1) then
		awk '/^ Fit to all/, /^ 1 to do/' $file | sed '/1 to do/d'
	    else if ($pipinput == 0) then
		awk '/^ SURFACE ANALYSIS/, /^ 1 to do/' $file | sed '/1 to do/d'
            else if ($noprogentry == 1 || $nolocals == 0) then
		awk '/^ SURFACE ANALYSIS/, /file opened/' $file | sed '/file opened/d'
            else
		awk '/^ SURFACE ANALYSIS/, /ntries to program/' $file | sed '/ntries to program/d'
	    endif
	    set output = 1
	    shift
	    breaksw

	case -b*:
	    if ($output == 1) then
		echo " "
		echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * *"
		echo " "
	    endif
            grep ' beam tilt =' $file
	    set output = 1
	    shift
	    breaksw
            
	default:
	    echo "Unknown option $argv[1]"
	    exit 1

    endsw
end

#
#  $Log$
#  Revision 3.9  2010/03/17 23:15:13  mast
#  Fixed to exclude entries to xfproduct from angles output
#
#  Revision 3.8  2008/07/07 04:14:57  mast
#  Fixed for new log with one ratio
#
#  Revision 3.7  2007/03/08 23:49:55  mast
#  Changes for beam tilt solutions
#
#  Revision 3.6  2006/10/03 23:34:48  mast
#  Fixed selection of solution when x axis tilt is used
#
#  Revision 3.5  2005/07/01 19:21:47  mast
#  Adapted to new ratio outputs
#
#  Revision 3.4  2005/05/19 05:48:30  mast
#  Fixed (sort of) for angle output with PIP input
#
#  Revision 3.3  2003/06/01 05:20:53  mast
#  Fixed problems with local alignment output by ending some selections on a
#  blank line
#
#  Revision 3.2  2003/05/25 16:28:17  mast
#  Added output of local areas and fiducial number
#
#  Revision 3.1  2002/05/07 01:59:06  mast
#  Fixed problem with interpreting the log file name input, added an
#  alternative to handle new-style SURFACE ANALYSIS output
