#!/bin/sh
#
# Description: startup script for eTomo
# 
# Copyright: Copyright (c) 2002, 2003
# Boulder Laboratory for 3D Fine Structure, University of Colorado
# 
# $Author$
# 
# $Revision$
# 

# To increase the memory limit for Java, increase the number here
#
javaMemLim=128m

# If you wish to use a different java runtime than the default uncomment the
# following line and define the path to the desired runtime directory

#export IMOD_JAVADIR=/usr/local/j2re1.4.0_04

if [ ! -z "$IMOD_JAVADIR" ]; then
  export PATH=${IMOD_JAVADIR}/bin:${PATH}
fi

# Test for appropriate java run time
if ! which java 2>&1 > /dev/null ; then
  echo "There is no java runtime in the current search path.  A Java runtime"
  echo "environment needs to be installed and the command search path needs"
  echo "to be defined to locate the java command."
  exit
fi

if java -version 2>&1 | grep GNU > /dev/null ; then
  echo "eTomo will not work with GNU java.  You should install a Sun version"
  echo "of the Java runtime environment and put it on your command search path"
  if [ ! -z "$IMOD_JAVADIR" ]; then
      echo "or make a link to it from $IMOD_JAVADIR"
  fi
  exit
fi

#  Workaround for java 1.4.0 / new threading library clash
export LD_ASSUME_KERNEL=2.4.1

# Test for existance of IMOD_DIR
if [ -z "$IMOD_DIR" ]; then
  echo "The IMOD_DIR environment variable has not been set"
  echo "Set it to point to the directory where IMOD is installed"
  exit
fi
if [ ! -e $IMOD_DIR ]; then
  echo "IMOD_DIR="${IMOD_DIR} " does not exist"
  echo "Set it to point to the directory where IMOD is installed"
  exit
fi


# If the system-dependent script for setting the library search path exists,
# source it.  This takes care of putting our Qt libraries on the right path
# variable, and allows other directories to be placed on the path too, to
# prevent clashes with libraries supplied by other packages

if [ -e ${IMOD_DIR}/bin/setlibpath ]; then
  . ${IMOD_DIR}/bin/setlibpath
fi

# set up error log file with date/time stamp
# If ETOMO_LOG_DIR is defined, set up both with it and 
# purge the directory to 60 files (30 sessions)

timestamp=`date | sed 's/://g' | awk '{printf "%s-%s-%s",$2,$3,$4}'`
outlog=etomo_out.log
errlog=etomo_err_${timestamp}.log
keeplines=+13
purgedir=.
if [ ! -z ${ETOMO_LOG_DIR} ] ; then
  if [ -w ${ETOMO_LOG_DIR} ] ; then
    outlog=${ETOMO_LOG_DIR}/etomo_out_${timestamp}.log
    errlog=${ETOMO_LOG_DIR}/${errlog}
    keeplines=+61
    purgedir=${ETOMO_LOG_DIR}
  fi
fi

# Purge the current or defined directory
#
anypurge=`cd ${purgedir} ; find . -name 'etomo_*.log*' -print`
if [ ! -z "${anypurge}" ] ; then
  purgelist=`cd ${purgedir} ; ls -t etomo_*.log* | tail -n $keeplines`
  # echo $purgelist
  if [ ! -z "${purgelist}" ] ; then 
    (cd ${purgedir} ; rm -f ${purgelist})
  fi
fi

# Copy the previous log files to backups
if [ -e ${outlog} ]; then
  cp -p ${outlog} ${outlog}~
fi
if [ -e ${errlog} ]; then
  cp -p ${errlog} ${errlog}~
fi

echo "starting eTomo"
java -Xmx${javaMemLim} -cp ${IMOD_DIR}/bin/etomo \
 -jar ${IMOD_DIR}/bin/etomo.jar $@ 2>${errlog} >${outlog} &


# $Log$
# Revision 1.14  2005/10/03 18:56:34  mast
# Added test for GNU java
#
# Revision 1.13  2005/05/19 23:00:33  mast
# Added variable for setting memory limit higher, default 128 now
#
# Revision 1.12  2005/01/19 00:56:05  mast
# Made the purging of log files safer
#
# Revision 1.11  2005/01/19 00:13:44  mast
# Added ability to direct logs to a specific directory
#
# Revision 1.10  2003/09/11 05:54:52  rickg
# updated for IMOD_JAVADIR
#
# Revision 1.9  2003/09/03 20:04:50  mast
# There is no source command in sh - needed  . instead
#
# Revision 1.8  2003/09/03 17:40:01  mast
# Modified to use system-dependent 'setlibpath' to fix library paths
#
# Revision 1.7  2003/07/22 22:13:32  rickg
# Use JVM defined by the PATH
# Check to see if we have our our QTLIB
# Force the system QTLIB to the front of LD_LIBRARY_PATH if
# it exists.
#
# Revision 1.6  2003/06/13 19:24:29  rickg
# Added LD_ASSUME_KERNEL=2.4.1 export
#
# Revision 1.5  2003/04/25 22:04:07  rickg
# Added echoing at startup
#
  
