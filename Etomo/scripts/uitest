#!/bin/sh
#
# Description: startup script for eTomo
# 
# Copyright: Copyright (c) 2002, 2003
# Boulder Laboratory for 3D Fine Structure, University of Colorado
# 
# $Author$
# 
# $Revision$
# 

# To increase the memory limit for Java, increase the number here
#

if [ $# -eq 0 ] ; then
  echo "usage: uitest Test_section_name"
  echo "usage: uitest --help"
  exit
elif [[ $1 == '--help' || $1 == '-h' ]] ; then
  echo "usage: uitest Test_section_name"
  echo See man uitestdoc
  exit
fi


javaMemLim=128m

# If you wish to use a different java runtime than the default uncomment the
# following line and define the path to the desired runtime directory

# Test for existance of IMOD_DIR
if [ -z "$IMOD_DIR" ]; then
  echo "The IMOD_DIR environment variable has not been set"
  echo "Set it to point to the directory where IMOD is installed"
  exit
fi
if [ ! -e $IMOD_DIR ]; then
  echo "IMOD_DIR="${IMOD_DIR} " does not exist"
  echo "Set it to point to the directory where IMOD is installed"
  exit
fi


#export IMOD_JAVADIR=/usr/local/j2re1.4.0_04
junit_home=${IMOD_JUNIT_HOME:=/usr/local/junit}
jfcunit_home=${IMOD_JFCUNIT_HOME:=/usr/local/jfcunit}
jakarta_regexp_home=${IMOD_JAKARTA_REGEXP_HOME:=$jfcunit_home}
jakarta_regexp_jar=${IMOD_JAKARTA_REGEXP_JAR:=jakarta-regexp-1.2.jar}
class_separator=${IMOD_CLASS_SEPARATOR:=:}
path_separator=${IMOD_PATH_SEPARATOR:=/}

class_path=$IMOD_DIR${path_separator}bin${path_separator}etomoUITest.jar\
$class_separator$junit_home${path_separator}junit.jar\
$class_separator$jfcunit_home${path_separator}jfcunit.jar\
$class_separator$jakarta_regexp_home${path_separator}$jakarta_regexp_jar\

if [ ! -z "$IMOD_JAVADIR" ]; then
  export PATH=${IMOD_JAVADIR}/bin:${PATH}
fi

# Test for appropriate java run time
if ! which java 2>&1 > /dev/null ; then
  echo "There is no java runtime in the current search path.  A Java runtime"
  echo "environment needs to be installed and the command search path needs"
  echo "to be defined to locate the java command."
  exit
fi

if java -version 2>&1 | grep GNU > /dev/null ; then
  echo "eTomo will not work with GNU java.  You should install a Sun version"
  echo "of the Java runtime environment and put it on your command search path"
  if [ ! -z "$IMOD_JAVADIR" ]; then
      echo "or make a link to it from $IMOD_JAVADIR"
  fi
  exit
fi

#  Workaround for java 1.4.0 / new threading library clash
export LD_ASSUME_KERNEL=2.4.1

# Test for existance of IMOD_UITEST_SOURCE
if [ -z "$IMOD_UITEST_SOURCE" ]; then
  echo "The IMOD_UITEST_SOURCE environment variable has not been set"
  echo "Set it to point to the directory where uitest.adoc is located"
  exit
fi
if [ ! -e "$IMOD_UITEST_SOURCE" ]; then
  echo "IMOD_UITEST_SOURCE="${IMOD_UITEST_SOURCE} " does not exist"
  echo "Set it to point to the directory where uitest.adoc is located"
  exit
fi

# If the system-dependent script for setting the library search path exists,
# source it.  This takes care of putting our Qt libraries on the right path
# variable, and allows other directories to be placed on the path too, to
# prevent clashes with libraries supplied by other packages

if [ -e ${IMOD_DIR}/bin/setlibpath ]; then
  . ${IMOD_DIR}/bin/setlibpath
fi

# Copy the previous out log file to backup
outlog=etomo_$1_out.log
errlog=etomo_$1_err.log

if [ -e ${errlog} ]; then
  cp -p ${errlog} ${errlog}~
fi

if [ -e ${outlog} ]; then
  cp -p ${outlog} ${outlog}~
fi

export IMOD_TEST_SECTION=$1
echo "starting eTomo UI test:  Test section $IMOD_TEST_SECTION"
echo "class_path:  $class_path"
java -Xmx${javaMemLim} -cp "$class_path" \
junit.textui.TestRunner etomo.JfcUnitTests 2>${errlog} >${outlog}
#
# $Log$
#
  
