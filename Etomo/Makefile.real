# THIS FILE WAS COPIED BY SETUP FROM Makefile.real - DO NOT EDIT
# Makefile for building Etomo under the IMOD structure
#
# NOTE: that this Makefile only works if run under the IMOD directory
# structure and the IMOD configure file has been defined.
#
# $Author$
#
# $Revision$
#
# $Log$
# Revision 2.5  2004/01/22 21:08:13  rickg
# Use headless mode when running tests.
#
# Revision 2.4  2003/10/31 17:19:38  mast
# *** empty log message ***
#
# Revision 2.3  2003/10/29 16:22:23  sueh
# added automatic testing during build
#
# Revision 2.2  2003/08/26 15:36:49  rickg
# Added comments
#
# Revision 2.1  2003/08/10 01:21:59  mast
# Changing to dummy/real Makefiles
#
# Revision 2.9  2003/08/09 23:02:40  mast
# renamed jar directory to jar_dir to avoid bizarre failure on SGI
#
# Revision 2.8  2003/08/08 23:57:15  mast
# *** empty log message ***
#
# Revision 2.7  2003/08/08 19:05:17  rickg
# Fixed cp and rm invokations
#
# Revision 2.6  2003/08/08 05:13:52  rickg
# Mods to support IMOD make structure
#

include ../configure

JAVAC_EXE = javac

# CLASSPATH and SOURCEPATH definitions match Eclipse structure
SOURCEPATH = src
CLASSPATH = bin

CLASS_FILES = $(CLASSPATH)/etomo/ApplicationManager.class
JAR_FILE = jar_dir/etomo.jar
TEST_JAR_FILE = jar_dir/etomoTest.jar

JUNIT_HOME = /usr/local/junit
TESTPATH = $(JUNIT_HOME)/junit.jar


PACKAGES = etomo etomo.comscript etomo.process etomo.storage etomo.type etomo.ui etomo.util

JAVAC_OPTIONS = -verbose
JAVAC = $(JAVAC_EXE) -d $(CLASSPATH) -sourcepath $(SOURCEPATH) $(JAVAC_OPTIONS)

JAVADOC_OPTIONS = -author -version -private -use -breakiterator -doctitle "Etomo API" -windowtitle "Etomo API"

all: $(JAR_FILE)
	echo "Make completed."

$(JAR_FILE): cpimages compile
	mkdir -p jar_dir
	jar  -cvmf MANIFEST.MF $(JAR_FILE) -C $(CLASSPATH) etomo -C $(CLASSPATH) images

testjarfile: cpimages testcompile
	mkdir -p jar_dir
	jar  -cvmf TEST_MANIFEST.MF $(TEST_JAR_FILE) -C $(CLASSPATH) etomo -C $(CLASSPATH) images

cpimages:
	if (! (-e $(CLASSPATH)))  mkdir $(CLASSPATH)
	\cp -rpf $(SOURCEPATH)/images $(CLASSPATH)
	rm -rf  $(CLASSPATH)/images/CVS

compile: 
	$(JAVAC)  $(SOURCEPATH)/etomo/ApplicationManager.java

testcompile: 
	$(JAVAC) -classpath $(TESTPATH) $(SOURCEPATH)/etomo/EtomoTests.java

install: $(JAR_FILE)
	\cp -p $(JAR_FILE) $(INSTBINDIR)
	chmod 755 scripts/etomo
	\cp -p scripts/etomo $(INSTBINDIR)

tests: testjarfile
	java -classpath $(TESTPATH):$(TEST_JAR_FILE) -Djava.awt.headless=true junit.textui.TestRunner etomo.EtomoTests
	echo "Make tests completed"

javadocs:
	javadoc -classpath $(CLASSPATH) $(SOURCEPATH) $(JAVADOC_OPTIONS) -d doc/javadoc \
	$(PACKAGES)

.PHONY: clean
clean:
	rm -rf bin/etomo
	rm -rf bin/images
	rm -rf doc/javadocs
	rm -f $(JAR_FILE)

.PHONY: linecount
linecount:
	echo "Actual line count:"
	wc -l src/etomo/*.java
	wc -l src/etomo/comscript/*.java | grep total
	wc -l src/etomo/process/*.java | grep total
	wc -l src/etomo/storage/*.java | grep total
	wc -l src/etomo/type/*.java | grep total
	wc -l src/etomo/ui/*.java | grep total
	wc -l src/etomo/util/*.java | grep total
	echo "Semicolon count:"
	grep ";" src/etomo/ApplicationManager.java | wc -l
	grep ";" src/etomo/comscript/*.java | wc -l
	grep ";" src/etomo/process/*.java | wc -l
	grep ";" src/etomo/storage/*.java | wc -l
	grep ";" src/etomo/type/*.java | wc -l
	grep ";" src/etomo/ui/*.java | wc -l
	grep ";" src/etomo/util/*.java | wc -l
	echo "Blank lines:"
	grep "^\s*$$" src/etomo/*.java | wc -l
	grep "^\s*$$" src/etomo/comscript/*.java | wc -l
	grep "^\s*$$" src/etomo/process/*.java | wc -l
	grep "^\s*$$" src/etomo/storage/*.java | wc -l
	grep "^\s*$$" src/etomo/type/*.java | wc -l
	grep "^\s*$$" src/etomo/ui/*.java | wc -l
	grep "^\s*$$" src/etomo/util/*.java | wc -l

