    CvMat* result = cvCreateMat(x,y,CV_64FC1);
    CvMat* Mf = ZeroMat(2*T, M);
    CvMat* Wf = OnesMat(2*T, M);
    CvMat* b = cvCreateMat(2*T,M,CV_64FC1);//helps creating constrains later
    CvMat* contourxrow=cvCreateMat(M,1,CV_64FC1);
    CvMat* contourxrowtr=cvCreateMat(1,M,CV_64FC1);
    CvMat* contouryrow=cvCreateMat(M,1,CV_64FC1);
    CvMat* contouryrowtr=cvCreateMat(1,M,CV_64FC1);;
    CvMat* iMat = ZeroMat(1,(4*T*M+2*T+3*M)-(2*T*M+2*T+3*M+1)+1);
    CvMat* qosubi = iMat;
    CvMat* qosubj = iMat;
    CvMat* qoval = OnesMat(1, cvGetSize(iMat).width);
    CvMat* stackb = Stack(b);
    CvMat *negb = cvCreateMat(cvGetSize(stackb).height,cvGetSize(stackb).width,CV_64FC1);
    CvMat* alpha;
        CvMat* alpha = cvCreateMat(1, 5, CV_64FC1);
        CvMat* GP = ZeroMat(cvGetSize(finalEstimation3d->G).height, cvGetSize(finalEstimation3d->P).width);
        CvMat* Mfhat = repMat(finalEstimation3d->t, 1, M);
    CvMat* MfWf = cvCreateMat(cvGetSize(Wf).height, cvGetSize(Wf).width, CV_64FC1);
    CvMat* Ut = ConcatenateMatrix(G, t);
    CvMat* UtOld = cvCreateMat(cvGetSize(Ut).height, cvGetSize(Ut).width, CV_64FC1);
    CvMat* V = cvCreateMat(M, 3, CV_64FC1);
    CvMat *Vtt=NULL,*Utt=NULL;
                CvMat* Wfcol = cvCreateMat(cvGetSize(Wf).height, 1, CV_64FC1);
                CvMat* Utcol = cvCreateMat(cvGetSize(Ut).height, 1, CV_64FC1);
                CvMat* MfWfcol = cvCreateMat(cvGetSize(MfWf).height, 1, CV_64FC1);
                CvMat *auxBuc1=cvCreateMat(Wfcol->rows,Wfcol->cols,CV_64FC1);
                CvMat *auxBuc2=cvCreateMat(Wfcol->rows,Wfcol->cols,CV_64FC1);
            CvMat* Vtr = cvCreateMat(V->cols,V->rows,CV_64FC1);
            CvMat* VtrOnes = ConcatenateMatrixDown(Vtr, OnesMat(1, M));
            CvMat* UtVtrOnes = cvCreateMat(Ut->rows,VtrOnes->cols,CV_64FC1);
            CvMat* r2=cvCreateMat(UtVtrOnes->rows,UtVtrOnes->cols,CV_64FC1);
            CvMat* r2replace=cvCreateMat((r2->rows)/2,r2->cols,CV_64FC1);
            CvMat* U = cvCreateMat(2*T, 4, CV_64FC1);    //????
                CvMat* MfWfrow = cvCreateMat(1,cvGetSize(MfWf).width,CV_64FC1);
                CvMat* MfWfrowT = cvCreateMat(cvGetSize(MfWfrow).width,cvGetSize(MfWfrow).height,CV_64FC1);
                CvMat* negMfWfrowT = cvCreateMat(cvGetSize(MfWfrow).width,cvGetSize(MfWfrow).height,CV_64FC1);;
                CvMat* Utrow = cvCreateMat(1,cvGetSize(Ut).width,CV_64FC1);
                CvMat* UtrowT = cvCreateMat(cvGetSize(Ut).width,1,CV_64FC1);
                CvMat* randUt1 = CreateRandMat(3,1,0.01,-0.005);
                CvMat* randUt2 = CreateRandMat(1,1,10,-5);
                CvMat* randUt = ConcatenateMatrixDown(randUt1, randUt2);
    CvMat *VttT = cvCreateMat(Vtt->cols,Vtt->rows,CV_64FC1);
    CvMat *reproj=ConcatenateMatrixDown(VttT,OnesMat(1,M));
    CvMat *MfHat=cvCreateMat(Utt->rows,reproj->cols,CV_64FC1);
    CvMat *resid=cvCreateMat(M,T,CV_64FC1);
    CvMat *residAux=cvCreateMat(M,T,CV_64FC1);
        CvMat *b=cvCreateMat(l+l,1,CV_64FC1);
        CvMat *xx=cvCreateMat(2+l,1,CV_64FC1);
        CvMat *c_x=cvCreateMat(keepContour.size(),T,CV_64FC1);
        CvMat *r_x=cvCreateMat(keepContour.size(),T,CV_64FC1);
        CvMat *c_y=cvCreateMat(keepContour.size(),T,CV_64FC1);
        CvMat *r_y=cvCreateMat(keepContour.size(),T,CV_64FC1);
