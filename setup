#!/bin/csh
#############################################################################
# $Id$
# Set up configuration file for building BL3DFS Software.
#  $Author$
#
#  $Date$
#
#  $Revision$
#  Log at end of file
#
#
# Global setup
#
set imod_copyright    = '1994-2003'
set lab_name1     = 'Boulder Laboratory for 3-Dimensional'
set lab_name2     = 'Electron Microscopy of Cells'
set source_dir    = `pwd`
set endian_dir    = include

set configure     = configure
set hconfigure    = include/imodconfig.tmp
set hconffinal    = include/imodconfig.h

set debug           = false
set bin_dir         = $source_dir/bin/
set inc_dir         = $source_dir/include/
set lib_dir         = $source_dir/buildlib/
set include_flags   = "-I. -I$inc_dir"
set optimization    = "-O2"
set gfx             = default
set compiler        = default
set machine         =
set defines         = 
set target_computer = manual_overide
set shared_libs     = default
set flags           = 
set fallback        = 
set swap_ieee       = true
set no_xlibs        = false

set inst_bin_dir    = default
set inst_lib_dir    = default
set inst_dir        = default
set tifflibs        = default
set usfftdir        = default
set blockio         =
set imsubsobj       = '*.o'
set tiltalilib      =
set tilt_dir        = flib/tilt
set fbpswitch       = fbpswitch-def.inc
set midas_dir       = midas
set sendevent_dir   = sendevent
set imod_dir        = imod
set plugsrc_dir     = plugs
set libdiaqt_dir    = libdiaqt
set etomo_dir       = Etomo
set scripts_dir     = scripts
set midas_qconf     = midas/qconfigure
set imod_qconf      = imod/qconfigure
set sendevent_qconf = sendevent/qconfigure
set fort_cpplibs    =
set ctrl_string     = Ctrl
set ld_lib_var      = LD_LIBRARY_PATH
set qtapp_path      =
set xplax           = qtplax.o
set objext          = o
set binext          =
set limod           = -limod
set liimod          = -liimod
set ltiff           = -ltiff
set ldnmncar        = -ldnmncar
set lifft           = -lifft
set ldfflags        =
set moc             = '$(QTDIR)/bin/moc'
set rgbprogs        = 

set b3dbyte         = "char"
set ubyte           = "unsigned char"
set int16           = "short int"
set uint16          = "unsigned short int"
set int32           = "int"
set uint32          = "unsigned int"
set float32         = "float"

#
# Input options
#


while($#argv > 0)
        switch($argv[1])
                case -d:
		case -debug:
			set debug = true
			breaksw

		case -shared:
			set shared_libs = true
			breaksw
		case -no_shared:
			set shared_libs = false
			breaksw

		case -tiff:
			set tifflibs = true
			breaksw
		case -no_tiff:
			set tifflibs = false
			breaksw

		case -m:
		case -mach:
		case -machine:
			shift
			set machine = $argv[1]
			breaksw

		case -flags:
			shift
			set flags  = $argv[1]        		
                        breaksw
		case -i:
		case -inst:
			shift
			set inst_dir = $argv[1]
			breaksw

		case -compiler:
			shift
			set compiler = $argv[1]
			breaksw

		case -swapieee:
			set swap_ieee = true
			breaksw

		case -swapvms:
			set swap_ieee = false
			breaksw

                case -no_xlibs:
                        set no_xlibs = true
                        breaksw

		case -h:
		case -help:
			goto usage

		default:
			echo Bad option
			goto usage
			breaksw
	endsw
        shift
end

#
# get machine specifics
#
set UMACHINE = `uname -m | sed '/ /s//_/g'`
set URELEASE = `uname -r`
set USYSTEM  = `uname -s`
#set UVERSION = `uname -v`
#set target_computer = {$UMACHINE}__{$USYSTEM}__{$URELEASE}__{$UVERSION}
set target_computer = {$UMACHINE}__{$USYSTEM}__{$URELEASE}__all

#echo "CER:  target_computer is: " $target_computer

#
# Create imodconfig.h file
#
set imod_version = `sed '/\./s///g' .version`
# This nightmare was needed under cygwin
set imod_version_name = `sed '/.\(*\[0-9.]*\).*/s//\1/' .version`
cat << EOF >! $hconfigure
/* THIS FILE IS GENERATED BY SETUP: DO NOT EDIT */
#ifndef IMOD_CONFIG_INCLUDED
#define IMOD_CONFIG_INCLUDED
#define VERSION              $imod_version
#define VERSION_NAME "$imod_version_name"
#define COPYRIGHT_YEARS "$imod_copyright"
#define LAB_NAME1 "$lab_name1"
#define LAB_NAME2 "$lab_name2"
EOF

#
# Copy default include file for Fortran byte-ordering
# Set up default include file for number of bytes per item when defining
# record length for direct unformatted I/O
\cp $endian_dir/big_endian.inc $endian_dir/endian.inc
echo "      parameter (nbytes_recl_item=4)" >! $endian_dir/recl_bytes.inc


# Was this needed?  Need to research.  Don't want to confuse VisualC
#if ($debug == false) then
#        echo "#define NDEBUG"                 >> $hconfigure
#endif

#
# Create make config file
#
echo "# Configure file for making BL3DFS software." >! $configure 
echo "# Do not edit this file it is created by setup." >> $configure
echo "# setup for $target_computer" >> $configure
echo " " >> $configure
echo "IMOD_VERSION $imod_version_name"

#
# Set up defaults for makefile copying
#
set makefile_ext = unix
set makefile_dirs = ($libdiaqt_dir)

#
# Set up directory names
#
if ($inst_dir != default) then
	if ($inst_bin_dir == default) then
		set inst_bin_dir = $inst_dir/bin
	endif
	if ($inst_lib_dir == default) then
		set inst_lib_dir = $inst_dir/lib
	endif
	set inst_plug_dir = $inst_dir/lib/imodplug
	set inst_plug_parent = $inst_dir/lib
else
	set inst_bin_dir = $bin_dir
	if ($inst_lib_dir == default) then
		set inst_lib_dir = $source_dir/lib
	endif
	set inst_plug_dir = $source_dir/lib/imodplug
	set inst_plug_parent = $source_dir/lib
	set inst_dir = $source_dir
endif

# Make this for some machine scripts to copy to
#
mkdir -p $lib_dir

#
# Go To Machine dependent parts.
#
if ($machine != "") then
	echo target is $machine
	goto $machine
endif

switch($target_computer)

	case *__IRIX64__6.0*:
	case *__IRIX__6.0*:
	case *__IRIX64__6.1*:
	case *__IRIX__6.1*:
	case *__IRIX64__6.2*:
	case *__IRIX__6.2*:
		echo target computer is SGI running $USYSTEM $URELEASE
		set machine = irix6-32
		goto irix6-32
		breaksw
	case *__IRIX64__6*:
	case *__IRIX__6*:
		echo target computer is SGI running $USYSTEM $URELEASE
		set machine = irix6-n32
		goto irix6-n32
		breaksw
	case *__IRIX__5.3*:
		echo target computer is SGI running $USYSTEM $URELEASE
		set machine = irix5
		goto irix5
		breaksw

	case sun4*__SunOS__5.*__*:
		echo $target_computer is solaris
		set machine = solaris
		goto solaris
		breaksw

        # Red Hat Linux on Intel (i686 for the time being 6 21 00)
        case i686__Linux__*__*:
                echo $target_computer is Intel running Red Hat Linux
                set machine = rhlinux
                goto rhlinux
                breaksw
        # Cygwin on Intel 
        case i686__CYGWIN_NT-5.*__*__*:
                echo $target_computer is Intel running Cygwin under Windows
                set machine = cygwin
                goto cygwin
                breaksw

	case Power_Macintosh__Darwin__*__*:
                echo $target_computer is Power Macintosh running OSX
                set machine = macosx
                goto macosx
                breaksw

	# OSF1 V3.2 17 alpha
	case *__OSF1__V3.2__*:
		echo $target_computer is alpha running OSF1
		set machine = alphaosf
		goto alphaosf
		breaksw

        # Alpha Linux (running SuSE 7.1 axp)
	# added by HmK 30/07/2001
        case alpha__Linux__*__*:
                echo $target_computer is ALPHA running Linux
                set machine = alphalinux
                goto alphalinux
                breaksw

	default:
		echo WARNING: no definition for $target_computer
		echo $target_computer error
        	breaksw

endsw

#############################################################################
#
# The default system, to document the meaning of the variables that need
# to be defined.
# 
echo "You need to specify a machine; the generic settings are not usable"
exit 1

# define the compilers to use
echo "CC      = cc"               >> $configure
echo "CXX     = CC"               >> $configure
echo "CPPC    = CC"               >> $configure
echo "FC     = f77"              >> $configure

# May need to define as \cp and \find if you have aliases
echo "CP      = cp"          	  >> $configure
echo "FIND    = find"          	  >> $configure

# define how to make libraries - see specific machines for shared libs
echo "AR      = ar"               >> $configure
echo "ARCPP   = ar"               >> $configure
echo "ARFLAGS = r "               >> $configure
echo 'LDFLAGS = -L$(LIBDIR)'      >> $configure
echo "RANLIB  = ranlib"           >> $configure
echo 'MAKELIB = $(AR) $(ARFLAGS)' >> $configure

# MAKELIBCPP needs to be defined to make a library from cpp files.

# MAKELIBSO needs to be defined to describe how to make a .so plugin
# from .o files; all systems are OK with MAKELIB for shared libraries


# Basic C libraries, used to build almost all programs, C and Fortran; but
# the Fortran Makefiles use FORTCLIBS
echo "CLIBS       = -lm -lc"                >> $configure
echo 'LIBS        = $(CLIBS)'               >> $configure
echo 'FORTCLIBS   = $(LIBS)'               >> $configure

# Libraries for programs using X 
echo "XLIBS       = -lXm -lXt -lX11 -lXext" >> $configure

# Libraries for non-graphical and graphics Fortran programs
echo "IMLIBS     = -lhvem -lim -lifft -limod" >> $configure
echo 'GRAPHLIBS    = '"$ldnmncar"' $(IMLIBS) $(XLIBS)' >> $configure

# extra library and option entries for making imod run plugins
echo 'PLUGLIBS = ' >> $configure

# Command for building a Fortran plugin
echo  'MAKEF77PLUGIN  = ld $(LDFLAGS) -shared -all -lftn -o'  >> $configure

# clip uses the Fortran fft library; it is linked with FLCC and has the
# entry F77LIBS for any libraries that may be needed
echo 'FLCC      = $(CC)'  >> $configure
echo 'F77LIBS   = '                  >> $configure

# set compilation flags for debugging
if ($debug == true) then
        set optimization = "-g"
endif
		
# A slew of compilation flags - on the SGI, some Fortran programs needed not
# to be optimized, hence NOOPFLAGS.  Some Fortran and C programs don't
# work with -n32, so they have to be done with "fallback" flags that compile
# them -32.  For all other machines, the fallback flags can match the regular
# ones, as they do here

# you can set "defines" with extra defines for C programs, but it's better to
# use imodconfig instead

# also note that the flags variable is a way for flags to be added on
# the command-line, and to be defined globally for all compilations

echo "CFLAGS   = $flags $defines $optimization $include_flags" >> $configure
echo "CXXFLAGS = $flags $defines $optimization $include_flags" >> $configure
echo "FFLAGS   = $flags $optimization  $include_flags"         >> $configure
echo "NOOPFFLAGS   = $flags $optimization -O0  $include_flags"     >> $configure
echo "FFALLBACK   = $flags $optimization  $include_flags"         >> $configure
echo "CFALLBACK   = $flags $defines $optimization $include_flags" >> $configure
echo 'LDFALLBACK = $(LDFLAGS)'       >> $configure
echo 'NOOPFFALLBACK = $(NOOPFFLAGS)' >> $configure

# Make tilt program from Fortran subroutines
echo 'TILTOBJS = bpsumnox.o bpsumxtilt.o bpsumlocal.o' >> $configure

# To indicate that librandm and libdtrigs need to be built
echo 'LINUXFLIBS = ' >> $configure

# A machine-specific directory for the USFFT libraries
set usfftdir = $source_dir/USFFTlib/default

goto standard_defines



###########################################################################
# SGI running IRIX 6
#
irix6-32:
irix6:
irix6-n32:
irix5:
source machines/irix5-6

goto standard_defines

#############################################################################
# Intel running Red Hat Linux 7.0
#
rhlinux:
source machines/rhlinux

goto standard_defines

#############################################################################
# Cygwin on Intel 
#
cygwin:
dos2unix machines/cygwin >& /dev/null
source machines/cygwin

goto standard_defines

#############################################################################
# Macintosh
#
macosx:
source machines/macosx

goto standard_defines

##############################################################################
# Solaris 2.x or SunOS5 using gcc compiler.
#
solaris:
source machines/solaris

goto standard_defines

##############################################################################
#
# Dec Alpha running OSF1
# NOT TESTED - MODIFIED ONLY FOR CONSISTENCY
#
alphaosf:
source machines/alphaosf

goto standard_defines


#############################################################################
# Alpha running SuSE Linux 7.1 axp
# added by HmK 30/07/2001
alphalinux:
source machines/alphalinux

goto standard_defines

##############################################################################
# Defines used for every system:
#
standard_defines:

if (($tifflibs == default) || ($tifflibs == false)) then
    echo 'DUMMYTIFF = libtiff' >> $configure
    echo "TIFFLIBS = $ltiff" >> $configure
    echo '#define NOTIFFLIBS'  >> $hconfigure
else
    if ($tifflibs == true) set tifflibs = $ltiff
    echo 'DUMMYTIFF = nolibtiff' >> $configure
    echo "TIFFLIBS = $tifflibs" >> $configure
endif

if (! -e $usfftdir/libusfft_r3.a ) then
    echo "USFFTLIBS = " >> $configure
    echo "FBPLIB = nolibfbp.a" >> $configure
else
    echo "USFFTLIBS = $usfftdir/libusfft_r3.a $usfftdir/libtest_usfft.a -lnsl" >> $configure
    echo "FBPLIB = libfbp.a" >> $configure
endif

# Remove fbpswitch if it is different, then copy if it doesn't exist
#
if (-e $tilt_dir/fbpswitch.inc) then
    set tiltdiff = `diff $tilt_dir/$fbpswitch $tilt_dir/fbpswitch.inc`
    if ($status) \rm $tilt_dir/fbpswitch.inc
endif
if (! -e $tilt_dir/fbpswitch.inc) \cp $tilt_dir/$fbpswitch $tilt_dir/fbpswitch.inc

if ($shared_libs == false) set inst_lib_dir = $lib_dir

echo "OBJEXT =    $objext" >> $configure
echo "BINEXT =    $binext" >> $configure
echo "LIMOD  =    $limod" >> $configure
echo "LIIMOD =    $liimod" >> $configure
echo "LIFFT =     $lifft" >> $configure
echo "BLOCKIO =   $blockio"  >> $configure
echo "IMSUBSOBJ = $imsubsobj"  >> $configure
echo "TILTALILIB = $tiltalilib"  >> $configure

echo "BINDIR  = $bin_dir" >> $configure
echo "INSTBINDIR = $inst_bin_dir"  >> $configure
echo "LIBDIR  = $lib_dir" >> $configure
echo "INSTLIBDIR = $inst_lib_dir"  >> $configure
echo "INSTDIR = $inst_dir"  >> $configure
echo "INCDIR  = $inc_dir"          >> $configure
echo "IMOD_PLUGIN_DIR = $inst_plug_dir" >> $configure
echo "MOC = $moc"     >> $configure

cat << EOF >> $hconfigure
#define CTRL_STRING "$ctrl_string"
typedef $b3dbyte b3dByte;
typedef $ubyte b3dUByte;
typedef $int16 b3dInt16;
typedef $uint16 b3dUInt16;
typedef $int32 b3dInt32;
typedef $uint32 b3dUInt32;
typedef $float32 b3dFloat;

#endif
 
EOF

#
# Make needed links in include
#
if (! -e include/imod.h) ln -s ../imod/imod.h include/imod.h

#
# Make the directories if needed.
#
mkdir -p $bin_dir
mkdir -p $lib_dir
mkdir -p $inst_bin_dir
mkdir -p $inst_lib_dir
mkdir -p $inst_plug_parent
mkdir -p $inst_plug_dir
mkdir -p $inst_dir/com
mkdir -p $inst_dir/autodoc
mkdir -p $inst_dir/html/man
mkdir -p $inst_dir/man/cat1
mkdir -p $inst_dir/man/cat5

if ($machine != cygwin) then

    #
    # manage qconfigure files
    #
    echo INCLUDEPATH += $inc_dir >> $midas_qconf
    echo LIBS += -L$lib_dir -liimod -limod -ldiaqt -ltiff >> $midas_qconf
    echo MOC_DIR = tmp >> $midas_qconf
    echo OBJECTS_DIR = tmp >> $midas_qconf
    echo target.path = $inst_bin_dir >> $midas_qconf
    echo target.path = $inst_bin_dir >! $sendevent_qconf

    # echo gives two \\ in tcsh 6.12 under RH 8.0 so use cat
    #
    cat <<EOF >> $imod_qconf
INSTALLS += 3dmodv
MOC_DIR = tmp
OBJECTS_DIR = tmp
UI_DIR = tmp
INCLUDEPATH += $inc_dir
target.path = $inst_bin_dir
3dmodv.path = $inst_bin_dir
EOF

    if ($debug == true) then
	echo CONFIG += debug warn_on >> $midas_qconf
	echo CONFIG += debug warn_on >> $sendevent_qconf
	echo CONFIG += debug warn_off >> $imod_qconf
    else
	echo CONFIG += release warn_off >> $midas_qconf
	echo CONFIG += release warn_off >> $sendevent_qconf
	echo CONFIG += release warn_off >> $imod_qconf
    endif

    # Finish qconfigure install instructions now that inst_bin_dir is defined
    #
    if ($machine != "macosx") then
        cat <<EOF >> $imod_qconf
unix:3dmodv.extra = cd $inst_bin_dir ; \\rm -f 3dmodv imod imodv ; ln -s 3dmod 3dmodv ; ln -s 3dmod imod ; ln -s 3dmodv imodv
EOF
    else
        cat << EOF >> $sendevent_qconf
INSTALLS += runsendevent
runsendevent.path = $inst_bin_dir
runsendevent.extra = \\cp -f runsendevent $inst_bin_dir/imodsendevent
EOF

        cat << EOF  >> $midas_qconf
INSTALLS += runmidas
runmidas.path = $inst_bin_dir
runmidas.extra = \\cp -f runmidas $inst_bin_dir/midas
EOF

        cat << EOF >> $imod_qconf
3dmodv.extra = \\cp -f runimodv $inst_bin_dir/3dmodv ; \\cp -f runimod $inst_bin_dir/3dmod ; cd $inst_bin_dir ; \\rm -f imod imodv ; ln -s 3dmod imod ; ln -s 3dmodv imodv
EOF
    endif

    (cd $midas_dir ; qmake midas.pro)
    (cd $sendevent_dir ; qmake imodsendevent.pro)


    # Manage imodhelp for the qmake without having to delete a good one
    # No longer remove mkargv
    if (! -e $imod_dir/imodhelp.h) touch $imod_dir/imodhelp.h

    (cd $imod_dir ; qmake imod.pro ; \rm -f 3dmodv ; ln -s 3dmod 3dmodv)
    \find $imod_dir -name imodhelp.h -size 0 -exec \rm -f '{}' \;

    # take care of dependencies on version
    #
    \find $imod_dir -name imod.o ! -newer .version -exec \rm -f '{}' \;
    \find $imod_dir -name 'imod*_menu.o' ! -newer .version -exec \rm -f '{}' \;

    set qt_libs = `sed -n '/^LIBS /s/^LIBS.*-L\$(QTDIR/-L\$(QTDIR/p' $sendevent_dir/Makefile`

    # Make the runimodqtapp script
    #
    cat << EOF >! $scripts_dir/runimodqtapp
#!/bin/csh -f
# THIS FILE WAS GENERATED BY setup
if (\$?IMOD_QTLIBDIR) then
    setenv $ld_lib_var \${IMOD_QTLIBDIR}:\$$ld_lib_var
endif
\$IMOD_DIR/bin/${qtapp_path}\$*
EOF
    chmod +x $scripts_dir/runimodqtapp
   
    # Make the script for etomo to source to set library path
    #
    echo '# THIS FILE WAS GENERATED BY setup AND IS MEANT TO BE SOURCED FROM SH/BASH' >! $scripts_dir/setlibpath
    echo 'if [ ! -z "$IMOD_QTLIBDIR" ] ; then' >> $scripts_dir/setlibpath
    echo "    export $ld_lib_var="'${IMOD_QTLIBDIR}:$'"$ld_lib_var" >> $scripts_dir/setlibpath
    echo fi >> $scripts_dir/setlibpath

    echo "GENERATED_SCRIPTS = setlibpath runimodqtapp" >> $configure

endif

echo "RGBPROGS = $rgbprogs" >> $configure
echo "LDFFLAGS = $ldfflags" >> $configure

# Take care of Fortran graphics variations
#
if ($xplax:r == "qtplax") then
    echo "GRAPHLIBS    = $ldnmncar"' $(IMLIBS)'" $qt_libs $fort_cpplibs" >> $configure
else if ($xplax == "xplax.o") then
    echo "GRAPHLIBS    = $ldnmncar"' $(IMLIBS) $(XLIBS)' >> $configure
else
    echo "GRAPHLIBS    = $ldnmncar"' $(IMLIBS)' >> $configure
endif
echo "XPLAX = $xplax" >> $configure

echo "# end of configure"          >> $configure


# The default is to jumper out the plugin source
#
echo "# THIS FILE WAS COPIED BY SETUP FROM Makefile.$makefile_ext - DO NOT EDIT" >! $plugsrc_dir/Makefile
cat $plugsrc_dir/Makefile.dummy >> $plugsrc_dir/Makefile


foreach i ($makefile_dirs)
    echo "# THIS FILE WAS COPIED BY SETUP FROM Makefile.$makefile_ext - DO NOT EDIT" >! $i/Makefile
    cat $i/Makefile.$makefile_ext >> $i/Makefile
end

# Test for javac and set up makefile for etomo
#
set javacexe = `which javac`
if ($status) then
    echo "The Java SDK is not installed or not on the path, so Etomo will not be built"
    \cp $etomo_dir/Makefile.dummy $etomo_dir/Makefile
else
    echo "# THIS FILE WAS COPIED BY SETUP FROM Makefile.real - DO NOT EDIT" >! $etomo_dir/Makefile
    cat $etomo_dir/Makefile.real >> $etomo_dir/Makefile
endif

# copy imodconfig.h unless it has not changed
#
if (-e $hconffinal) then
    set diffout = `diff $hconfigure $hconffinal`
    if ($status) then
	\mv $hconfigure $hconffinal
    else
	\rm $hconfigure
    endif
else
    \mv $hconfigure $hconffinal
endif

exit


#
# Usage, help.
#

usage:
echo "setup [options]"
echo "Options are: -help,-h     Print this message."
echo "             -debug,-d    Set up with debug flags."
echo "             -machine,-m  Set target machine to one of: (irix5 | irix6-32 |" 
echo "                          (irix6-n32 | solaris | rhlinux | alphalinux) "
echo "             -inst,-i     Set installation directory for bin and lib."
echo "                          e.g., /usr/local/IMOD"
echo "             -swapieee    Make Fortran code on SGI swap IEEE floats"
echo "             -swapvms     Make Fortran code on SGI swap VMS floats"
echo "             -shared      Make libraries shared"
echo "             -no_shared   Make libraries non-shared"
echo "             -tiff        Link with TIFF libraries"
echo "             -no_tiff     Do not try to link with TIFF libraries"
echo "             -no_xlibs    Do not try to make X version of plax routines"
echo "             -compiler    Use specified compilers (intel for rhlinux)"
echo "             -flags       Set flags for compilation"
exit


#
#  $Log$
#  Revision 3.32  2003/11/01 16:38:09  mast
#  put libiimod before libimod, prevent unneeded copying of fbpswitch
#
#  Revision 3.31  2003/10/25 16:46:11  mast
#  set default to dummy out plugins
#
#  Revision 3.30  2003/10/24 04:17:18  mast
#  Changes for Windows/Intel compilation
#
#  Revision 3.29  2003/10/08 17:19:35  mast
#  Create the autodoc directory
#
#  Revision 3.28  2003/09/24 20:38:48  mast
#  Handle GRAPHLIBS and XPLAX output globally with new xplax variable
#
#  Revision 3.27  2003/09/23 21:09:48  mast
#  Added path variable for running qt apps out of Mac .app folders
#
#  Revision 3.26  2003/09/11 19:53:42  mast
#  Added configure variable for generated scripts
#
#  Revision 3.25  2003/09/04 01:08:49  mast
#  Modify identifying string for Windows to include XP
#
#  Revision 3.24  2003/09/03 00:38:36  mast
#  Fix problem with outputting a bash if-then in a cat << EOF
#
#  Revision 3.23  2003/08/25 18:51:16  mast
#  Generated scripts for set library load path before running programs
#
#  Revision 3.22  2003/08/12 22:00:56  mast
#  Removed fix to bug in qmake on Mac Qt 3.1
#
#  Revision 3.21  2003/08/12 04:47:44  mast
#  Remove libdiaqt from GRAPHICS definition and output qtplax.o for PLAX
#
#  Revision 3.20  2003/08/10 01:32:23  mast
#  Added test for java compiler and setting of Etomo Makefile accordingly
#
#  Revision 3.19  2003/05/21 04:35:35  mast
#  Find needed to use -size 0, not -empty
#
#  Revision 3.18  2003/05/12 15:13:44  mast
#  Keeping it from removing imodhelp and making sure 3dmod is recompiled when
#  version changes.
#
#  Revision 3.17  2003/05/03 00:55:20  mast
#  fixing 3dmod links for Mac
#
#  Revision 3.16  2003/04/26 04:26:34  mast
#  fix 3dmodv link
#
#  Revision 3.15  2003/04/25 03:27:19  mast
#  Changes for 3dmod naem change
#
#  Revision 3.14  2003/04/17 19:29:39  mast
#  Changes for Mac
#
#  Revision 3.13  2003/03/29 01:06:19  mast
#  Add variable to add libraries to GRAPHLIBS
#
#  Revision 3.12  2003/03/29 00:24:04  mast
#  rearrange ending statement
#
#  Revision 3.11  2003/03/28 23:52:48  mast
#  Changes for adding Mac OS X and new Qt version of plax
#
#  Revision 3.10  2003/02/28 19:46:18  mast
#  Do not touch imodconfig.h unless it changes
#
#  Revision 3.9  2003/02/28 18:23:26  mast
#  CHanges for cygwin/windows
#
#  Revision 3.8  2003/02/27 20:23:46  mast
#  Entries for Qt version of imodsendevent
#
#  Revision 3.7  2003/02/21 22:14:00  mast
#  Adding type definitions to imodconfig.h
#
#  Revision 3.6  2003/02/10 20:57:47  mast
#  *** empty log message ***
#
#  Revision 3.5.2.8  2003/01/30 05:50:42  mast
#  add variable MAKELIBCPP for.cpp library under RH 8.0
#
#  Revision 3.5.2.7  2003/01/29 06:14:17  mast
#  Fix output to imod's qconfigure under RH 8.0
#
#  Revision 3.5.2.6  2003/01/27 00:38:37  mast
#  fine-tuning the build after pure Qt imod
#
#  Revision 3.5.2.5  2002/12/06 22:08:30  mast
#  *** empty log message ***
#
#  Revision 3.5.2.4  2002/12/06 17:36:51  mast
#  *** empty log message ***
#
#  Revision 3.5.2.3  2002/12/06 17:20:04  mast
#  *** empty log message ***
#
#  Revision 3.5.2.2  2002/12/06 17:16:33  mast
#  *** empty log message ***
#
#  Revision 3.5.2.1  2002/12/05 18:10:04  mast
#  *** empty log message ***
#
#  Revision 3.5  2002/11/05 23:28:44  mast
#  Added variables for the lab name
#
#  Revision 3.4  2002/09/10 03:29:13  mast
#  Eliminate links in include for nimp_source:model.inc and
#  stat_source:statsize.inc, since these are gone from programs
#
#  Revision 3.3  2002/07/30 05:37:26  mast
#  Made new variables for glw install directories so that GLw could be
#  included in a standard build
#
#  Revision 3.2  2002/07/28 21:51:13  mast
#  Set year correctly in copyright
#
#  Revision 3.1  2002/07/26 19:14:30  mast
#  Added copy of machine-specific fast backprojection switching file
#
#  Revision 3.0  2001/11/29 17:25:14  rickg
#  *** empty log message ***
#
#  Revision 1.3  2001/11/28 23:34:31  rickg
#  Updated mkdir command to mkdir -p
#
#  Revision 1.2  2001/11/28 15:45:06  mast
#  Changes to make install directory root available to man, html, com Makefiles
#
