#!/bin/tcsh -f
#
# Multi-platform install script for IMOD. 
# Usage : installIMOD [package name]
# If run with no arguments, it will look for a package in the current 
# directory and try to install it if there is only one.
#
#  $Author$
#
#  $Date$
#
#  $Revision$
#
#  $Log$
#  Revision 3.5  2004/07/04 13:47:31  mast
#  Added details for user and made it work with spaces in directory path
#
#  Revision 3.4  2004/04/24 17:42:04  mast
#  Remove gzcat error warning, it happened because editing file added a newline
#
#  Revision 3.3  2004/04/24 04:32:59  mast
#  Fixes for SGI; decided not to put source command in /etc/profile
#
#  Revision 3.2  2004/04/24 01:21:57  mast
#  Needed to separate : from varaiable
#
#  Revision 3.1  2004/04/24 01:10:03  mast
#  Initial creation
#

# Set the package name from the argument and check it if there is one
#
if ($#argv > 0) then
    set package = "$argv[1]"
    if (! -r "$package") then
        echo "File $package does not exist or is not readable"
        exit 1
    endif
else

    # Or look for the package in the current directory

    set package = `ls imod_*.tar.gz`
    if ($#package == 0) then
        echo "No IMOD package found in current directory; specify package as an argument"
        exit 1
    endif

    if ($#package > 1) then
        echo "Cannot identify IMOD package; there is more than one in this directory"
        echo "Specify package as an argument"
        exit 1
    endif
endif

# Get name that unpacked directory will have
#
set version = `echo $package:t | sed '/\(imod_[0-9.]*\).*/s//\1/' | sed '/\.$/s///'`

echo "Checking system and package types"

# DUPLICATION ALERT: THE FOLLOWING IS INCORPORATED IN THE installStub
#
set system = `uname -s`
set installdir = /usr/local

switch ($system)
    case *IRIX*:
        set os = irix
        # leave out /etc/profile because it is more likely used by sh than
        # bash users
        set scripts = (sgi.cshrc)
        set sysfiles = (/etc/cshrc)
        breaksw
    case *Linux*:
        set os = linux
        set scripts = (IMOD-linux.csh IMOD-linux.sh)
        breaksw
    case *CYGWIN*:
        set os = windows
        set scripts = (IMOD-cygwin.csh IMOD-cygwin.sh)
        set package = `cygpath "$package"`
        breaksw
    case *Darwin*:
        set os = osx
        set installdir = /Applications
        set scripts = (mac.cshrc mac.bashrc)
        set sysfiles = (/etc/csh.login /etc/profile)
        breaksw

    default:
        echo "IMOD will not run on this system ($system)"
        exit 1
endsw

switch ($package)
    case *irix*:
        set packos = irix
        breaksw
    case *win*:
        set packos = windows
        breaksw
    case *osx*:
        set packos = osx
        breaksw
    default
        set packos = linux
        breaksw
endsw

if ($os != $packos) then
    echo "The system type ($os) does not match the IMOD package type ($packos)"
    exit 1
endif

if (! -w $installdir) then
    echo "You do not have permission to write to $installdir"
    echo  "Run this command with sudo or as root"
    exit 1
endif

# Construct absolute path to package if necessary
#
set packpath = ""
set absolute = `echo $package | grep '^/'`
if ($status) set packpath = "`pwd`""/"

cd $installdir

# If file exists as a link, just remove it
#
if (-l IMOD) then
    echo "Removing link to previous version but leaving previous version"
    \rm IMOD
endif

# Remove existing files by this name
#
if (-e $version) then
    echo "Removing an existing copy of the same version..."
    \rm -r $version
endif

echo "Unpacking IMOD in $installdir ..."
if ($os == irix) then
    gzcat "$packpath$package" | tar xf -
else
    tar xzf "$packpath$package"
endif

if (-e IMOD) then

    # If there is an existing file, first see if there is a version inside
    #
    if (-e IMOD/VERSION) then
        set vernum = `sed '/[^0-9.]/s///g' IMOD/VERSION`
        set oldversion = imod_$vernum
        if ($oldversion == $version) then
            set oldversion = ""
            echo "The existing IMOD appears to be the same version as the new one"
        else if (-e $oldversion) then
            echo "The existing IMOD appears to be $oldversion"
            echo "Removing another copy of $oldversion ..."
            \rm -r $oldversion
        endif

    else
        # If no version, just rename to first free oldIMOD
        #
        set oldversion = ""
        @ oldnum = 1
        while ($oldnum < 1000)
            if (! -e oldIMOD.$oldnum) then
                set oldversion = oldIMOD.$oldnum
                @ oldnum = 1000
            endif
            @ oldnum++
        end
        if ($oldversion == "") echo "Unable to find a name to rename previous version to"
    endif

    # Rename to the old version name or just remove if couldn't get one
    #
    if ($oldversion == "") then
        echo "Removing previous version ..."
        \rm -r IMOD
    else
        echo "Renaming previous version to $oldversion"
        \mv IMOD $oldversion
    endif
endif

# Make link or rename
#
if ($os == windows || $os == osx) then
    echo "Renaming $version to IMOD"
    mv $version IMOD
else
    echo "Linking $version to IMOD"
    ln -s $version IMOD
endif

cd IMOD
if ($os == windows || $os == linux) then

    # The easy ones: copy to /etc/profile.d
    #
    echo "Copying startup scripts to /etc/profile.d: $scripts"
    \cp $scripts /etc/profile.d
else

    # The hard ones: append a source command to a system file if files exist
    # and it is not there already
    #
    @ ind = 1
    while ($ind <= $#scripts)
        set sysfil = $sysfiles[$ind]
        if (-e $scripts[$ind] && -e $sysfil) then
            set already = `grep 'IMOD.*source' $sysfil`
            if ($status) then
                echo "Adding source of startup script to $sysfil"
                echo "# Set environment for IMOD" >> $sysfil
                echo "" >> $sysfil
                tail -2 $scripts[$ind] >> $sysfil
            else
                echo "Source command already exists in $sysfil"
            endif
        endif
        @ ind++
    end
endif

set vernum = `echo $version | sed '/[^0-9.]/s///g'`
echo ""
echo "The installation of IMOD $vernum is complete."
echo "It is up to you to remove any previous versions when you are sure"
echo " that you are done with them."
echo "IMOD-related files in $installdir :"
cd ..
ls -l | grep -i imod | grep -vi tempDir
echo ""
echo "If there are version-specific IMOD startup commands in individual user"
echo " startup files (.cshrc, .bashrc) they should be changed or removed."
exit 0
